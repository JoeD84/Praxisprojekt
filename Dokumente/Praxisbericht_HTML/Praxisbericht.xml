<?xml version="1.0" encoding="UTF-8"?>
<?latexml searchpaths="/mnt/Dropbox/!Praxisprojekt/workspace/Translator/Dokumente/Praxisbericht_HTML"?>
<!-- %__ -->
<!-- %Formatvorlage für Diplomarbeiten der FHWT -->
<!-- %__ -->
<!-- %Angelehnt an die Word-Vorlage von Herrn Stührenberg -->
<!-- %Download unter http://www.atlando.de/fhwt.htm -->
<!-- %erstellt von Stefan Macke. 22.10.2007 -->
<!-- %http://blog.stefan-macke.de -->
<!-- %Genutzt und angepasst auf utf8 von Johannes Dielmann -->
<!-- %Meta-Informationen __ -->
<!-- %Informationen über das Dokument, wie z.B. Titel, Autor, Matrikelnr. etc -->
<!-- %werden in der Datei _Meta.tex definiert und können danach global -->
<!-- %verwendet werden. -->
<!-- %__ -->
<!-- %Dokumentenkopf __ -->
<!-- %Diese Vorlage basiert auf "scrreprt" aus dem koma-script. -->
<!-- %Die Option draft sollte beim fertigen Dokument ausgeschaltet werden. -->
<!-- %__ -->
<?latexml options="%11pt,%Schriftgröße%DIV10,%ngerman,%fürUmlaute,Silbentrennungetc.%a4paper,%Papierformat%oneside,%einseitigesDokument%titlepage,%eswirdeineTitelseiteverwendet%final%StatusdesDokuments(final/draft)" class="report"?>
<!-- %Benötigte Packages __ -->
<!-- %Weitere Packages, die benötigt werden, sind in die Datei Packages.tex -->
<!-- %"ausgelagert", um die Vorlage möglichst übersichtlich zu halten. -->
<!-- %__ -->
<!-- %Informationen __ -->
<!-- %Definition von globalen Parametern, die im gesamten Dokument verwendet -->
<!-- %werden können (z.B auf dem Deckblatt etc.). -->
<!-- %__ -->
<!-- %Eigene Befehle und typographische Auszeichnungen für diese -->
<!-- %**** Meta.tex Line 25 **** -->
<!-- %Abkürzungen mit korrektem Leerraum -->
<!-- %Anpassung des Seitenlayouts __ -->
<!-- %siehe Seitenstil.tex -->
<!-- %__ -->
<!-- %\usepackage[ -->
<!-- %automark,			% Kapitelangaben in Kopfzeile automatisch erstellen -->
<!-- %headsepline,		% Trennlinie unter Kopfzeile -->
<!-- %ilines				% Trennlinie linksbündig ausrichten -->
<!-- %]{scrpage2} -->
<!-- %Anpassung an Landessprache __ -->
<!-- %Verwendet globale Option german siehe \documentclass -->
<!-- %__ -->
<!-- %\usepackage{babel} -->
<!-- %\usepackage[ngerman]{babel} -->
<!-- %Umlaute __ -->
<!-- %Umlaute/Sonderzeichen wie äüöß direkt im Quelltext verwenden (CodePage). -->
<!-- %Erlaubt automatische Trennung von Worten mit Umlauten. -->
<!-- %__ -->
<!-- %\usepackage[utf8]{inputenc} -->
<!-- %\usepackage[T1]{fontenc} -->
<?latexml package="textcomp"?>
<!-- %Euro-Zeichen etc. -->
<!-- %**** Packages.tex Line 25 **** -->
<!-- %Grafiken __ -->
<!-- %Einbinden von EPS-Grafiken [draft oder final] -->
<!-- %Option [draft] bindet Bilder nicht ein - auch globale Option -->
<!-- %__ -->
<?latexml options="dvips,final" package="graphicx"?>
<?latexml graphicspath="Bilder/"?>
<!-- %Dort liegen die Bilder des Dokuments -->
<!-- %Befehle aus AMSTeX für mathematische Symbole z.B. \boldsymbol \mathbb __ -->
<?latexml package="amsmath,amsfonts"?>
<!-- %Weitere Zeichen z.B. \textcelsius \textordmasculine \textsurd \textonehalf -->
<!-- %\texteuro \texttimes \textdiv ... aus textcomp.sty -->
<!-- %siehe >>Schnell ans Ziel mit \LaTeXe<< von Jörg Knappen -->
<!-- %(Oldenbourg, München und Wien 1997, ISBN 3-486-24199-0) -->
<!-- %\usepackage{tccompat} -->
<!-- %Für Index-Ausgabe; \printindex __ -->
<?latexml package="makeidx"?>
<!-- %Einfache Definition der Zeilenabstände und Seitenränder etc. __ -->
<!-- %\usepackage{setspace} -->
<!-- %\usepackage{geometry} -->
<!-- %**** Packages.tex Line 50 **** -->
<!-- %Symbolverzeichnis __ -->
<!-- %Symbolverzeichnisse bequem erstellen, beruht auf MakeIndex. -->
<!-- %makeindex.exe %Name%.nlo -s nomencl.ist -o %Name%.nls -->
<!-- %erzeugt dann das Verzeichnis. Dieser Befehl kann z.B. im TeXnicCenter -->
<!-- %als Postprozessor eingetragen werden, damit er nicht ständig manuell -->
<!-- %ausgeführt werden muss. -->
<!-- %Die Definitionen sind ausgegliedert in die Datei Abkuerzungen.tex. -->
<!-- %__ -->
<!-- %\usepackage[intoc]{nomencl} -->
<!-- %\let\abbrev\nomenclature -->
<!-- %\renewcommand{\nomname}{Abkürzungsverzeichnis} -->
<!-- %\setlength{\nomlabelwidth}{.25\hsize} -->
<!-- %\renewcommand{\nomlabel}[1]{#1 \dotfill} -->
<!-- %\setlength{\nomitemsep}{-\parsep} -->
<!-- %Zum Umfließen von Bildern __ -->
<!-- %\usepackage{floatflt} -->
<!-- %Zum Einbinden von Programmcode __ -->
<?latexml package="listings"?>
<?latexml package="color"?>
<!-- %**** Packages.tex Line 75 **** -->
<!-- %Lange URLs umbrechen etc. __ -->
<?latexml package="url"?>
<!-- %Wichtig für korrekte Zitierweise __ -->
<!-- %\usepackage[square,numbers]{natbib} -->
<?latexml options="numbers" package="natbib"?>
<!-- %\usepackage{biblatex} -->
<!-- %Quellenangaben in eckige Klammern fassen __ -->
<!-- %\bibpunct{[}{]}{;}{a}{}{,~} -->
<!-- %\usepackage{jurabib} -->
<!-- %\jurabibsetup{authorformat=smallcaps,% Autor in Kapitälchen -->
<!-- %%authorformat=year, -->
<!-- %authorformat=citationreversed,% Im Zitat Vorname vorne -->
<!-- %authorformat=indexed,% Autor in Index -->
<!-- %authorformat=and,% Autoren mit "," und "und" abgetrennt -->
<!-- %authorformat=firstnotreversed,% -->
<!-- %authorformat=reducedifibidem,% Bei Verweis nur Nachname. -->
<!-- %%superscriptedition=all,% Auflage hochgestellt -->
<!-- %%citefull=first,% Erstzitat voll -->
<!-- %titleformat=italic, -->
<!-- %**** Packages.tex Line 125 **** -->
<!-- %titleformat=all, -->
<!-- %titleformat=colonsep,% Doppelpunkt zwischen Aut. u. Titel -->
<!-- %ibidem=strict,% Ebenda pro Doppelseite -->
<!-- %see,% Das zweite Argument ist optional für "Vgl." etc. -->
<!-- %commabeforerest,% Komma vor Seitenzahl -->
<!-- %%howcited=compare,% -->
<!-- %%bibformat=ibidem,% Strich bei widerholtem Autor in BIB. -->
<!-- %commabeforerest, -->
<!-- %bibformat=compress, -->
<!-- %pages=always, -->
<!-- %%pages=format,% S. wird vorweggesetzt -->
<!-- %crossref=long,% Querverweise in voller Länge -->
<!-- %square,% eckige Klammern bei Zitaten -->
<!-- %%oxford, -->
<!-- %%chicago, -->
<!-- %} -->
<!-- %\AddTo\bibsgerman{% -->
<!-- %\jblookforgender% -->
<!-- %\renewcommand*{\ibidemname}{Ebenda}% -->
<!-- %\renewcommand*{\ibidemmidname}{ebenda}% -->
<!-- %\renewcommand*{\bibjtsep}{In: }% Vor Zeitschriften -->
<!-- %\renewcommand*{\bibbtsep}{In: }% Vor Buchtitel -->
<!-- %\renewcommand*{\incollinname}{In: }%Nicht so ganz sauber. -->
<!-- %\renewcommand*{\bibatsep}{.}% Nach Titel -->
<!-- %**** Packages.tex Line 150 **** -->
<!-- %\renewcommand*{\bibbdsep}{}%Vor Datum -->
<!-- %\renewcommand*{\jbaensep}{.}% -->
<!-- %\renewcommand*{\bibprdelim}{)}% Klammer bei Zeitschriftjahr rechts -->
<!-- %\renewcommand*{\bibpldelim}{(}% Klammer bei Zeitschriftjahr links -->
<!-- %\renewcommand*{\biblnfont}{\textsc}% Nachamen Autor im BIB -->
<!-- %\renewcommand*{\bibelnfont}{\textsc}% Nachamen Hg. im BIB -->
<!-- %\renewcommand*{\bibfnfont}{\textsc}% Vorn. Autor im BIB -->
<!-- %\renewcommand*{\bibefnfont}{\textsc}% Vorn. Hg. im BIB -->
<!-- %\renewcommand*{\jbcitationyearformat}[1]{#1}% Komma zwischen Autor und Jahr entfernen -->
<!-- %\def\herename{hier: }% -->
<!-- %\jbfirstcitepageranges% Format: S. x__z, hier y. -->
<!-- %\renewcommand\bibidemSfname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidemsfname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidemPfname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidempfname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidemSmname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidemsmname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidemPmname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\bibidempmname{\raisebox{.2em}{\rule{2.em}{.2pt}}~}% -->
<!-- %\renewcommand\idemSfname{Dies.}% -->
<!-- %\renewcommand\idemsfname{dies.}% -->
<!-- %\renewcommand\idemPfname{Dies.}% -->
<!-- %\renewcommand\idempfname{dies.}% -->
<!-- %\renewcommand\idemSmname{Ders.}% -->
<!-- %\renewcommand\idemsmname{ders.}% -->
<!-- %**** Packages.tex Line 175 **** -->
<!-- %\renewcommand\idemPmname{Dies.}% -->
<!-- %\renewcommand\idempmname{dies.}% -->
<!-- %\renewcommand{\jbannoteformat}[1]{{\footnotesize\begin{quote}#1\end{quote}}} -->
<!-- %}% -->
<!-- %% PDF-Optionen __ -->
<?latexml options="bookmarks,bookmarksopen=true,pdftitle=ÜbersetzenvonSchrittmotorbefehlen,pdfauthor=JohannesDielmann,pdfcreator=JohannesDielmann,pdfsubject=ÜbersetzenvonSchrittmotorbefehlen,pdfkeywords=ÜbersetzenvonSchrittmotorbefehlen,colorlinks=true,linkcolor=blue,%einfacheinterneVerknüpfungenanchorcolor=black,%Ankertextcitecolor=blue,%VerweiseaufLiteraturverzeichniseinträgeimTextfilecolor=blue,%Verknüpfungen,dielokaleDateienöffnenmenucolor=red,%Acrobat-Menüpunkteurlcolor=blue,%linkcolor=black,%einfacheinterneVerknüpfungen%anchorcolor=black,%Ankertext%citecolor=black,%VerweiseaufLiteraturverzeichniseinträgeimText%filecolor=black,%Verknüpfungen,dielokaleDateienöffnen%menucolor=black,%Acrobat-Menüpunkte%urlcolor=black,backref,%pagebackref,plainpages=false,%zurkorrektenErstellungderBookmarkspdfpagelabels,%zurkorrektenErstellungderBookmarkshypertexnames=false,%zurkorrektenErstellungderBookmarks%linktocpage%SeitenzahlenanstattTextimInhaltsverzeichnisverlinken" package="hyperref"?>
<!-- %Zum fortlaufenden Durchnummerieren der Fußnoten __ -->
<!-- %\usepackage{chngcntr} -->
<!-- %Aliase für Zitate -->
<!-- %\defcitealias{WPProzess}{Wikipedia:~Prozess} -->
<!-- %\usepackage{minitoc} -->
<!-- %für lange Tabellen -->
<?latexml package="longtable"?>
<?latexml package="array"?>
<!-- %\usepackage{ragged2e} -->
<?latexml package="lscape"?>
<!-- %**** Packages.tex Line 225 **** -->
<!-- %Spaltendefinition rechtsbündig mit definierter Breite -->
<!-- %Formatierung von Listen ändern -->
<?latexml package="paralist"?>
<!-- %\setdefaultleftmargin{2.5em}{2.2em}{1.87em}{1.7em}{1em}{1em} -->
<!-- %Anhangsverzeichnis -->
<!-- %\makeatletter% __> De-TeX-FAQ -->
<!-- %\newcommand*{\maintoc}{% Hauptinhaltsverzeichnis -->
<!-- %\begingroup -->
<!-- %\@fileswfalse% kein neues Verzeichnis öffnen -->
<!-- %\renewcommand*{\appendixattoc}{% Trennanweisung im Inhaltsverzeichnis -->
<!-- %\value{tocdepth}=-10000 % lokal tocdepth auf sehr kleinen Wert setzen -->
<!-- %}% -->
<!-- %\tableofcontents% Verzeichnis ausgeben -->
<!-- %\endgroup -->
<!-- %} -->
<!-- %\newcommand*{\appendixtoc}{% Anhangsinhaltsverzeichnis -->
<!-- %\begingroup -->
<!-- %\edef\@alltocdepth{\the\value{tocdepth}}% tocdepth merken -->
<!-- %\setcounter{tocdepth}{-10000}% Keine Verzeichniseinträge -->
<!-- %\renewcommand*{\contentsname}{% Verzeichnisname ändern -->
<!-- %Verzeichnis der Anh\"ange}% -->
<!-- %**** Packages.tex Line 250 **** -->
<!-- %\renewcommand*{\appendixattoc}{% Trennanweisung im Inhaltsverzeichnis -->
<!-- %\setcounter{tocdepth}{\@alltocdepth}% tocdepth wiederherstellen -->
<!-- %}% -->
<!-- %\tableofcontents% Verzeichnis ausgeben -->
<!-- %\setcounter{tocdepth}{\@alltocdepth}% tocdepth wiederherstellen -->
<!-- %\endgroup -->
<!-- %} -->
<!-- %\newcommand*{\appendixattoc}{% Trennanweisung im Inhaltsverzeichnis -->
<!-- %} -->
<!-- %\g@addto@macro\appendix{% \appendix erweitern -->
<!-- %\if@openright\cleardoublepage\else\clearpage\fi% Neue Seite -->
<!-- %\addcontentsline{toc}{chapter}{\appendixname}% Eintrag ins Hauptverzeichnis -->
<!-- %\addtocontents{toc}{\protect\appendixattoc}% Trennanweisung in die toc-Datei -->
<!-- %} -->
<!-- %\makeatother -->
<!-- %Hinweis Box! -->
<!-- %\usepackage{xltxtra} -->
<!-- %\usepackage[biolinum,noamsmath,language]{xelibertine} -->
<!-- %**** Packages.tex Line 275 **** -->
<!-- %\setmonofont{Linux Biolinum O} -->
<!-- %\usepackage{calc} -->
<!-- %\usepackage{tabularx,colortbl,multirow,dcolumn} -->
<?latexml package="color"?>
<!-- %\usepackage{showframe} -->
<!-- %\definecolor{raccolor1}{HTML}{A3D7DF} -->
<!-- %\definecolor{raccolor2}{HTML}{009A9D} -->
<!-- %\newenvironment{Tipp}{ -->
<!-- %\begin{center} -->
<!-- %\begin{sffamily} -->
<!-- %\setlength\arrayrulewidth{0.75pt}\arrayrulecolor{white} -->
<!-- %\renewcommand{\arraystretch}{1.3} -->
<!-- %\begin{tabular}[h!]{p{\textwidth-12pt}} -->
<!-- %\rowcolor{raccolor2} \textbf{{\color{white}Hinweis}} \\ -->
<!-- %\hline -->
<!-- %\rowcolor{raccolor1} } -->
<!-- %{\\ -->
<!-- %\end{tabular} -->
<!-- %\arrayrulecolor{black} -->
<!-- %\end{sffamily} -->
<!-- %\end{center} -->
<!-- %} -->
<!-- %\newenvironment{TippS}{ -->
<!-- %**** Packages.tex Line 300 **** -->
<!-- %\begin{center} -->
<!-- %\begin{sffamily} -->
<!-- %\setlength\arrayrulewidth{0.75pt}\arrayrulecolor{white} -->
<!-- %\renewcommand{\arraystretch}{1.3} -->
<!-- %\begin{tabular}[h!]{p{4.5cm}} -->
<!-- %\rowcolor{raccolor2} \textbf{{\color{white}Hinweis}} \\ -->
<!-- %\hline -->
<!-- %\rowcolor{raccolor1} } -->
<!-- %{\\ -->
<!-- %\end{tabular} -->
<!-- %\arrayrulecolor{black} -->
<!-- %\end{sffamily} -->
<!-- %\end{center} -->
<!-- %} -->
<!-- %Erstellung eines Index und Abkürzungsverzeichnisses aktivieren __ -->
<!-- %\makenomenclature -->
<!-- %Kopf- und Fußzeilen, Seitenränder etc. __ -->
<!-- %\input{Seitenstil} -->
<!-- %Eigene Definitionen für Silbentrennung -->
<!-- %**** Praxisbericht.tex Line 50 **** -->
<!-- %Das eigentliche Dokument __ -->
<!-- %Der eigentliche Inhalt des Dokuments beginnt hier. Die einzelnen Seiten -->
<!-- %und Kapitel werden in eigene Dateien ausgelagert und hier nur inkludiert. -->
<!-- %__ -->
<?latexml RelaxNGSchema="LaTeXML"?>
<document xmlns="http://dlmf.nist.gov/LaTeXML">
  <!-- %auch subsubsection nummerieren 
     %\setcounter{secnumdepth}{3}
     %\setcounter{tocdepth}{3}
     %\ofoot{}
     %\include{Deckblatt}
     %\include{Inhalt/Abstract}
     %\ofoot{\pagemark}
     %Seitennummerierung __
     %Vor dem Hauptteil werden die Seiten in großen römischen Ziffern
     %nummeriert...
     %__
     %\pagenumbering{Roman}
     %\maintoc
     %\tableofcontents								% Inhaltsverzeichnis
     %Abkürzungsverzeichnis __
     %\input{Inhalt/Glossar}
     %**** Praxisbericht.tex Line 75 ****
     %\label{sec:Glossar}
     %\printnomenclature-->
  <TOC name="List of Figures" role="figures" select="ltx:figure"/>
  <!-- %Abbildungsverzeichnis -->
  <TOC name="List of Tables" role="tables" select="ltx:table"/>
  <!-- %Tabellenverzeichnis -->
  <TOC name="Codeverzeichnis" role="listings" select="ltx:listing"/>
  <!-- %Listings-Verzeichnis -->
  <chapter frefnum="Chapter 1" refnum="1" xml:id="Ch1">
    <title><tag>Chapter 1 </tag>Hinweise zum Dokument</title>
    <toctitle><tag>1 </tag>Hinweise zum Dokument</toctitle>
    <para xml:id="Ch1.p1">
      <p>1<!-- %\begin{Tipp}Hinweise werden durch diese Boxen gekennzeichnet\end{Tipp} --></p>
    </para>
    <para xml:id="Ch1.p2">
      <p><text backgroundcolor="#D9D9FF">Fachbegriffe</text> werden blau hinterlegt.<break/></p>
    </para>
    <para xml:id="Ch1.p3">
      <p><emph>Eigennamen</emph> werden kursiv dargestellt.<break/></p>
    </para>
    <para xml:id="Ch1.p4">
      <p><text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">Code-Fragmente</text> werden gelb hinterlegt.<break/></p>
    </para>
    <listing class="language_C" xml:id="LSTx1">
      <toccaption>Code/Hinweis.c</toccaption>
      <tabular>
        <tr>
          <td class="linenumber">
            <text fontsize="tiny">1</text>
          </td>
          <td>
            <text class="lstline" fontsize="footnote">//<text color="#008000">Quelltext<text class="lstspace"> </text>wird<text class="lstspace"> </text>in<text class="lstspace"> </text>diesen<text class="lstspace"> </text>Codelistings<text class="lstspace"> </text>dargestellt.</text></text>
          </td>
        </tr>
      </tabular>
    </listing>
    <para xml:id="Ch1.p5">
      <p>Der komplette Quelltext für den Mikrocontroller, der Quelltext für diese Dokumentation, die Dokumentation selbst und weitere Bilder können unter <ref class="url" href="https://github.com/JoeD84/Praxisprojekt"><text font="typewriter">https://github.com/JoeD84/Praxisprojekt</text></ref> abgerufen werden.
<!-- %...danach in normalen arabischen Ziffern __ -->
<!-- %Inhalt __ 
     %Hier können jetzt die einzelnen Kapitel inkludiert werden. Sie müssen
     %**** Praxisbericht.tex Line 100 ****
     %in den entsprechenden .TEX-Dateien vorliegen. Die Dateinamen können
     %natürlich angepasst werden.
     %__--></p>
    </para>
  </chapter>
  <chapter frefnum="Chapter 2" refnum="2" xml:id="Ch2" labels="LABEL:cha:Einleitung">
    <title><tag>Chapter 2 </tag>Einleitung</title>
    <toctitle><tag>2 </tag>Einleitung</toctitle>
    <para xml:id="Ch2.p1">
      <p>Ein 3D-Laserscanner bietet vielfältige Möglichkeiten und Einsatzgebiete. Die Haupt-einsatzgebiete finden sich in der Bauteileprüfung, der Erstellung von Finite-Elemente-Daten in Verbindung mit Bauteilanalyse, der Erstellung von 3D-Daten, der Kontrolle von Zubehörteilen und dem Reverse-Engineering.<break/>Im Besitz der Fachhochschule Koblenz befindet sich ein komplettes 3D-Laserer-fassungssystem. Dazu gehören eine Erfassungssoftware, ein 3D-Laserscanner und ein Drehtisch. Bisher müssen für eine Aufnahme, alle Komponenten zueinander passen. Der Drehtisch in diesem System ist jedoch ein Eigenbau der Fachhochschule Koblenz und die darin verbaute Drehtischsteuerung nicht kompatibel zu denen, von der Erfassungssoftware unterstützten, Drehtischsteuerungen.<break/>Mittels eines Mikrocontrollers soll der vorhandene Aufbau so erweitert werden, dass der Drehtisch von der Software angesteuert werden kann und so der volle Umfang des Systems nutzbar gemacht werden. Dabei sind folgende Aufgaben zu realisieren. Die Höhenverstellung des Drehtisches soll genutzt werden können und die verbauten Endschalter ihre vorhergesehene Funktion erfüllen. Der Mikrocontroller soll sich mit mehreren Tastern bedienen lassen und über ein LC-Display verfügen, welches den aktuellen Status anzeigt. Mit einer Schritt-für-Schritt-Anleitung soll es auch für Studenten und Mitarbeiter der Fachhochschule möglich sein, schnell und einfach eine Aufnahme durchzuführen. Die Daten dieser Aufnahme sollen exportiert und in z.B. CAD-Anwendungen nutzbar sein. <break/>Der Aufbau der Arbeit gliedert sich im Wesentlichen in die Vorstellung der vorhandenen Hard- und Software, dem chronologischen Arbeitsablauf während des Projektes, ein Kapitel das Probleme und deren Lösungen aufzeigt, in ein Fazit und mögliche zukünftige Verbesserungen. Im Anhang befindet sich eine Schritt-für-Schritt-Anleitung die es Laien ermöglicht 3D-Modelle aufzunehmen und zu exportieren.
   <!-- %Motivation und Ziel 
     %\include{Inhalt/Kapitel_Begriffe}	% Begriffe--></p>
    </para>
  </chapter>
  <chapter frefnum="Chapter 3" refnum="3" xml:id="Ch3" labels="LABEL:sec:Hardware">
    <title><tag>Chapter 3 </tag>Vorstellung der vorhandenen Hardware</title>
    <toctitle><tag>3 </tag>Vorstellung der vorhandenen Hardware</toctitle>
    <para xml:id="Ch3.p1">
      <p>Die Hardware besteht im Wesentlichen aus den Komponenten in Abbildung <ref labelref="LABEL:fig:Übersicht"/>.</p>
    </para>
    <figure frefnum="Figure 3.1" placement="htb" refnum="3.1" xml:id="Ch3.F1" labels="LABEL:fig:Übersicht">
      <graphics graphic="Uebersicht_2.pdf" options="width=433.62pt" xml:id="Ch3.F1.g1" class="centering"/>
      <toccaption class="centering"><tag>3.1 </tag>Blick auf den Arbeitsaufbau</toccaption>
      <caption class="centering"><tag>Figure 3.1: </tag>Blick auf den Arbeitsaufbau</caption>
    </figure>
    <table frefnum="Table 3.1" placement="htb" refnum="3.1" xml:id="Ch3.T1" labels="LABEL:tbl:Aufbau">
      <toccaption><tag>3.1 </tag>Komponenten im Aufbau</toccaption>
      <caption><tag>Table 3.1: </tag>Komponenten im Aufbau</caption>
      <tabular>
        <thead>
          <tr>
            <td align="center" border="l r t" thead="true"><rule height="10.75pt" width="0.0pt" yoffset="-4.3pt"/> 1</td>
            <td align="left" border="r t" thead="true">Computer</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center" border="l r t" thead="true"><rule height="10.75pt" width="0.0pt" yoffset="-4.3pt"/> 2</td>
            <td align="left" border="r t">3D-Laserscanner VI-900</td>
          </tr>
          <tr>
            <td align="center" border="l r t" thead="true"><rule height="10.75pt" width="0.0pt" yoffset="-4.3pt"/> 3</td>
            <td align="left" border="r t">Ansteuerung für den Drehtisch</td>
          </tr>
          <tr>
            <td align="center" border="l r t" thead="true"><rule height="10.75pt" width="0.0pt" yoffset="-4.3pt"/> 4</td>
            <td align="left" border="r t">Drehtisch</td>
          </tr>
          <tr>
            <td align="center" border="b l r t" thead="true"><rule height="10.75pt" width="0.0pt" yoffset="-4.3pt"/> 5</td>
            <td align="left" border="b r t">Zu scannendes Objekt (Kalibrierblech)</td>
          </tr>
        </tbody>
      </tabular>
      <!-- %**** Inhalt/Kapitel_Hardware.tex Line 25 **** -->
    </table>
    <section refnum="3.1" xml:id="Ch3.S1" labels="LABEL:sec:Computer">
      <title><tag>3.1 </tag>Computer</title>
      <para xml:id="Ch3.S1.p1">
        <p>Zur Verfügung steht ein IBM kompatibler x86 Standard PC mit einer <text backgroundcolor="#D9D9FF">SCSI-</text> und einer <text backgroundcolor="#D9D9FF">RS-232-Schnittstelle</text>. Auf diesem ist die Erfassungssoftware <emph>RapidForm2004</emph> [<ref labelref="LABEL:sec:V_Software"/>] installiert. Die SCSI Schnittstelle wird zur Kommunikation mit dem 3D-Laserscanner und die RS-232-Schnittstelle zur Kommunikation mit einer Schrittmotorsteuerung genutzt.</p>
      </para>
    </section>
    <section refnum="3.2" xml:id="Ch3.S2" labels="LABEL:sec:VI-900">
      <title><tag>3.2 </tag>3D-Laserscanner VI-900</title>
      <para xml:id="Ch3.S2.p1">
        <p>Der 3D-Laserscanner <emph>VI-900</emph> der Firma <emph>Konica Minolta</emph>[<ref labelref="LABEL:sec:V_Hardware"/>] besteht, wie auf Abbildung <ref labelref="LABEL:fig:VI900"/> zu sehen, aus einer Kamera und einem <text backgroundcolor="#D9D9FF">Lasertriangulator</text>. Das System lässt sich über eine SCSI-Schnittstelle ansprechen und konfigurieren. Zur mobilen Nutzung kann das Gerät auch auf der Rückseite bedient werden. Aufgenommene Daten können auf einer <text backgroundcolor="#D9D9FF">CF-Karte</text> gespeichert werden. Im Projekt wurde jedoch lediglich die direkte Ansteuerung via SCSI genutzt.<break/>Der VI-900 digitalisiert Objekte durch ein Laser-Lichtschnittverfahren. Das vom Objekt reflektierte Licht wird von einer CCD-Flächenkamera erfasst, nach Ermittlung der Distanzwerte (Z-Achse) mittels Laser-Triangulation werden die 3D-Daten erstellt. Der Laserstrahl wird mit Hilfe eines hochpräzisen galvanischen Spiegels über das Objekt projiziert, pro Scan werden 640 x 480 Einzelpunkte erfasst.<cite>(<bibref bibrefs="minolta:einleitung" separator=";" show="Number" yyseparator=","/>)</cite><break/>Die Technischen Daten befinden sich im Anhang in Tabelle <ref labelref="LABEL:tab:TD_VI-910"/></p>
      </para>
      <figure frefnum="Figure 3.2" placement="htb" refnum="3.2" xml:id="Ch3.F2" labels="LABEL:fig:VI900">
        <graphics graphic="vi900-big.jpg" options="width=100.0pt" xml:id="Ch3.F2.g1" class="centering"/>
        <toccaption class="centering"><tag>3.2 </tag>VI-900 - Kamera oben, Lasertriangulator unten</toccaption>
        <caption class="centering"><tag>Figure 3.2: </tag>VI-900 - Kamera oben, Lasertriangulator unten</caption>
      </figure>
      <subsection refnum="3.2.1" xml:id="Ch3.S2.SS1" labels="LABEL:sec:LaserTri">
        <title><tag>3.2.1 </tag>Lasertriangulator Prinzip</title>
        <para xml:id="Ch3.S2.SS1.p1">
          <p>Ein Lasertriangulator besteht, wie in Abbildung <ref labelref="LABEL:fig:LaserTriangulator"/> zu sehen, aus einem Laser, einem Linsensystem und im einfachsten Fall, aus einer Pixeldetektorzeile. Der Laser strahlt auf ein Objekt und je nach Entfernung des Objektes wird das Streulicht unter einem anderen Winkel zurückgestrahlt. Das Streulicht wird durch die Linsen auf den Pixeldetektor abgebildet. Über die Position des Laserspots auf dem Pixeldetektor lässt sich auf die Entfernung des Objektes schließen.</p>
        </para>
        <figure frefnum="Figure 3.3" placement="h" refnum="3.3" xml:id="Ch3.F3" labels="LABEL:fig:LaserTriangulator">
          <graphics graphic="Laser-Triangulation.png" options="width=100.0pt" xml:id="Ch3.F3.g1" class="centering"/>
          <toccaption class="centering"><tag>3.3 </tag>Prinzip: Laser-Triangulation</toccaption>
          <caption class="centering"><tag>Figure 3.3: </tag>Prinzip: Laser-Triangulation</caption>
        </figure>
        <!-- %**** Inhalt/Kapitel_Hardware.tex Line 50 **** -->
      </subsection>
    </section>
    <section refnum="3.3" xml:id="Ch3.S3" labels="LABEL:sec:AnsteuerungDrehtisch">
      <title><tag>3.3 </tag>Drehtisch und Ansteuerung</title>
      <subsection refnum="3.3.1" xml:id="Ch3.S3.SS1" labels="LABEL:sec:Drehtisch">
        <title><tag>3.3.1 </tag>Drehtisch</title>
        <para xml:id="Ch3.S3.SS1.p1">
          <p>Der Tisch in dem der Drehtisch verbaut ist, ist eine Eigenkonstruktion der Werkstatt des RheinAhrCampus Remagen. Er besteht aus einer massiven Edelstahlarbeitsplatte, welche auf 4 Füßen ruht. Aus dieser ist ein Rechteck mit aufgesetztem Halbkreis ausgeschnitten. In diesem Ausschnitt befindet sich der Drehtisch(siehe Abbildung <ref labelref="LABEL:fig:Drehtisch"/>). Er ist auf einem Schienensystem gelagert. Mit dem Schienensystem kann der Drehtisch in der Vertikalen positioniert werden. Mit einem Schrittmotor lässt sich der Drehtisch zusätzlich in der Höhe verstellen. Die Höhenverstellung wird mit einem <text backgroundcolor="#D9D9FF">Schneckengetriebe</text> realisiert. Ein weiterer Schrittmotor ist für die Drehung des Tisches zuständig. Der Tisch ist über ein <text backgroundcolor="#D9D9FF">Harmonic-Drive-Getriebe</text> mit dem Schrittmotor verbunden. Das Übersetzungsverhältnis des Getriebes beträgt 1:50.</p>
        </para>
        <figure frefnum="Figure 3.4" placement="h" refnum="3.4" xml:id="Ch3.F4" labels="LABEL:fig:Drehtisch">
          <graphics graphic="Drehtisch" options="width=433.62pt" xml:id="Ch3.F4.g1" class="centering"/>
          <toccaption class="centering"><tag>3.4 </tag>Drehtisch</toccaption>
          <caption class="centering"><tag>Figure 3.4: </tag>Drehtisch</caption>
        </figure>
      </subsection>
      <subsection refnum="3.3.2" xml:id="Ch3.S3.SS2" labels="LABEL:sec:Spannungsv">
        <title><tag>3.3.2 </tag>Spannungsversorgung</title>
        <para xml:id="Ch3.S3.SS2.p1">
          <p>Die Schrittmotorkarten werden von einem PC-Netzteil gespeist. Die <text backgroundcolor="#D9D9FF">Logikbausteine</text> werden mit 5V gespeist, zusätzlich werden die Schrittmotorkarten mit 12V für die Schrittmotoren gespeist. Die Kabel sind direkt an die Verbindungsleisten gelötet.<break/>Dies verhindert das einfache Ausbauen der Spannungsversorgung und die einfache Erweiterung um neue Einschubkarten.</p>
        </para>
      </subsection>
      <subsection refnum="3.3.3" xml:id="Ch3.S3.SS3" labels="LABEL:sec:Schrittmotoren">
        <title><tag>3.3.3 </tag>Schrittmotoren</title>
        <para xml:id="Ch3.S3.SS3.p1">
          <p>Für die Rotation kommt der Schrittmotor 440-458 der Firma R+S zum Einsatz. Dieser hat einen Schrittwinkel von 1,8°, eine Haltedrehmoment von 500mNm, wird mit 8-Drahtleitung verschaltet und mit 12V Gleichspannung versorgt. Aus dem Schrittwinkel ergeben sich 200 Schritte pro Umdrehung. Diese werden mit einem <text backgroundcolor="#D9D9FF">Harmonic-Drive-Getriebe</text>, mit einer Übersetzung von 500:1, auf 100.000 Schritte pro Umdrehung erhöht.<break/>Für die Höhenverstellung wird der Schrittmotor 440-420, ebenfalls von der Firma R+S, verwendet. Dieser hat auch einen Schrittwinkel von 1,8°, hat jedoch ein Haltemoment von 70mNm, wird in 6-Drahtleitung verschaltet und mit 5V Gleichspannung gespeist. Dieser ist mit einer Übersetzung von 5:1 und einem Schneckengetriebe mit dem Drehtisch verbunden.</p>
        </para>
      </subsection>
      <subsection refnum="3.3.4" xml:id="Ch3.S3.SS4" labels="LABEL:sec:Schrittmotorkarten">
        <title><tag>3.3.4 </tag>Schrittmotorkarten</title>
        <para xml:id="Ch3.S3.SS4.p1">
          <p>Die Ansteuerung für die Schrittmotoren sind als 19”-Einschübe realisiert, siehe Abbildung <ref labelref="LABEL:fig:19Zoll_Rack"/> links. Für jeden Schrittmotor wird ein Einschub benötigt.
Die Einschübe sind Produkte der Firma R+S. Mittels <text backgroundcolor="#D9D9FF">RS-232 Schnittstelle</text> lassen sich die Karten konfigurieren und ansteuern. Die Konfiguration und Ansteuerung erfolgt über einen vorgegeben
<!-- %**** Inhalt/Kapitel_Hardware.tex Line 75 **** --><text backgroundcolor="#D9D9FF">ASCII</text><note mark="1" role="footnote">Der American Standard Code for Information Interchange (ASCII, alternativ US-ASCII, oft [æski] ausgesprochen) ist eine 7-Bit-Zeichenkodierung<cite>(<bibref bibrefs="wiki:ascii" separator=";" show="Number" yyseparator=","/>)</cite></note>
Befehlssatz. Der Befehlssatz befindet sich im Kapitel <ref labelref="LABEL:sec:A_ASCII_Befehle"/>. Es können zwei oder mehr Karten als
<text backgroundcolor="#D9D9FF">Daisy-Chain</text><note mark="2" role="footnote">Als Daisy Chain (englisch, wörtlich „Gänseblümchenkette“) bezeichnet man eine Anzahl von Hardware-Komponenten, welche in Serie miteinander verbunden sind (meist in sogenannten Bussystemen in der Automatisierungstechnik).<cite>(<bibref bibrefs="wiki:daisy" separator=";" show="Number" yyseparator=","/>)</cite> </note> in Reihe geschaltet werden.<break/>Zu Beginn des Projekts war nur die erste Schrittmotorsteuerung vorbereitet.</p>
        </para>
        <figure frefnum="Figure 3.5" placement="h" refnum="3.5" xml:id="Ch3.F5" labels="LABEL:fig:19Zoll_Rack">
          <graphics graphic="19Zoll_Rack" options="width=433.62pt" xml:id="Ch3.F5.g1" class="centering"/>
          <toccaption class="centering"><tag>3.5 </tag>Ansteuerung im 19”-Rack</toccaption>
          <caption class="centering"><tag>Figure 3.5: </tag>Ansteuerung im 19”-Rack</caption>
        </figure>
      </subsection>
      <subsection refnum="3.3.5" xml:id="Ch3.S3.SS5" labels="LABEL:sec:Motorverkabelung">
        <title><tag>3.3.5 </tag>Motorverkabelung</title>
        <para xml:id="Ch3.S3.SS5.p1">
          <p>Die Schrittmotoren benötigen ein mindestens 4-adriges Kabel. Das Kabel für den Schrittmotor, der für die Rotation zuständig ist, war bereits gefertigt. Ein Kabel zwischen Schrittmotor und Schrittmotorkarte zur Höhenverstellung und für die Endschalter war nicht vorhanden und wurde im Verlauf des Projekts gefertigt.</p>
        </para>
      </subsection>
      <subsection refnum="3.3.6" xml:id="Ch3.S3.SS6" labels="LABEL:sec:Endschalter">
        <title><tag>3.3.6 </tag>Endschalter</title>
        <para xml:id="Ch3.S3.SS6.p1">
          <p>Die Schrittmotorkarten unterstützen das Abschalten der Motoren wenn ein sogenannter Endschalter ausgelöst wird. Dies sind im allgemeinen mechanische Schalter die ausgelöst werden wenn der Tisch sich dem Ende des Arbeitsbereiches nähert. Dies verhindert eine Beschädigung des Aufbaus.<break/>Im Aufbau sind bereits induktive Endschalter der Firma <text font="italic">Pepperl+Fuchs</text> verbaut. Diese werden durch einen Metallstutzen ausgelöst. Dieser ist jedoch schlecht positioniert oder ungenügend lang. Würde der Drehtisch über seine Grenzen hinaus in der Höhe verstellt werden, würden die Endschalter nicht rechtzeitig ausgelöst werden und der Aufbau würde beschädigt werden.</p>
        </para>
      </subsection>
    </section>
    <section refnum="3.4" xml:id="Ch3.S4" labels="LABEL:sec:Mikrocontroller">
      <title><tag>3.4 </tag>Mikrocontroller</title>
      <para xml:id="Ch3.S4.p1">
        <p>Ein Mikrocontroller besteht, wie in Abbildung <ref labelref="LABEL:fig:uC_Blockdiagramm"/> zu sehen, aus CPU, Flash-Speicher, EEPROM, Registern, Ports und mehreren Peripherie-Funktionen wie z.B. Timern, ADC, DAC und seriellen Schnittstellen. Für unterschiedliche Aufgaben können unterschiedliche Mikrocontroller verwendet werden, welche sich in ihrem Funktionsumfang unterscheiden.<break/>Besonders Wichtig im Mikrocontroller sind die sogenannten Register. Dieses sind spezielle, meist 8-Bit breite, Abschnitte im Speicher. Sie repräsentieren Werte und Einstellungen im Mikrocontroller. Diese können  beschrieben und ausgelesen oder nur ausgelesen werden. Durch das Auslesen oder Beschreiben der Register kann der Mikrocontroller mit internen und externen Komponenten interagieren. Die Register die zur externen Kommunikation dienen werden als Ports bezeichnet. <break/>Es stand ein ATmega8515 <cite>(<bibref bibrefs="atmel:8515" separator=";" show="Number" yyseparator=","/>)</cite> im DIL-Gehäuse zur Verfügung. Dieser hatte 8 Kbyte Flash, drei externe Interrupts, eine serielle Schnittstelle und konnte mit bis zu 16 MHz betrieben werden.
<!-- %**** Inhalt/Kapitel_Hardware.tex Line 100 **** -->Dieser war geeignet um sich mit den speziellen Eigenheiten der Mikrocontroller Programmierung vertraut zu machen.</p>
      </para>
      <figure frefnum="Figure 3.6" placement="htb" refnum="3.6" xml:id="Ch3.F6" labels="LABEL:fig:uC_Blockdiagramm">
        <graphics graphic="Mikrocontroller_Block" options="width=433.62pt" xml:id="Ch3.F6.g1" class="centering"/>
        <toccaption class="centering"><tag>3.6 </tag>Block Diagramm: Mikrocontroller ATmega324A<cite>(<bibref bibrefs="atmel:ug_324a" separator=";" show="Number" yyseparator=","/>)</cite></toccaption>
        <caption class="centering"><tag>Figure 3.6: </tag>Block Diagramm: Mikrocontroller ATmega324A<cite>(<bibref bibrefs="atmel:ug_324a" separator=";" show="Number" yyseparator=","/>)</cite></caption>
      </figure>
      <subsection refnum="3.4.1" xml:id="Ch3.S4.SS1" labels="LABEL:sec:STK500">
        <title><tag>3.4.1 </tag>Entwicklerboard STK500</title>
        <para xml:id="Ch3.S4.SS1.p1">
          <p>Um den Mikrocontroller zu programmieren und die Programmierung zu überprüfen, wird das <text backgroundcolor="#D9D9FF">Entwicklerboard</text> <emph>STK500</emph>[<ref labelref="LABEL:sec:V_Hardware"/>], wie auf Abbildung <ref labelref="LABEL:fig:STK500"/> zu sehen, verwendet. Das Board enthält mehrere Mikrocontroller-Steckplätze, 2 serielle Schnittstellen, 8 Taster, 8 LEDs, 2 Erweiterungsports, eine <text backgroundcolor="#D9D9FF">ISP</text><note mark="3" role="footnote">In System Programmer</note> Programmierschnittstelle und mehrere Jumper zum Konfigurieren des Boards.<break/>Von den beiden seriellen Schnittstellen kann die Eine zur Programmierung des Mikrocontrollers verwendet werden. Die Andere kann zur Kommunikation mit dem Mikrocontroller genutzt werden.<break/>Auf dem Board stehen fünf 10 polige Stiftleisten
zur Verfügung. Diese sind direkt mit den Ein- und Ausgabe Pins, den sogenannten <emph>Ports</emph>, des Mikrocontroller verbunden und können über Flachbandkabel mit Hardwarekomponenten wie z.B. Taster, LED, LC-Displays oder seriellen Schnittstellen verbunden werden.</p>
        </para>
        <figure frefnum="Figure 3.7" placement="htb" refnum="3.7" xml:id="Ch3.F7" labels="LABEL:fig:STK500">
          <graphics graphic="STK500_Schema.pdf" options="width=433.62pt" xml:id="Ch3.F7.g1" class="centering"/>
          <toccaption class="centering"><tag>3.7 </tag>Schemazeichnung eines STK500<cite>(<bibref bibrefs="atmel:ug_stk500" separator=";" show="Number" yyseparator=","/>)</cite></toccaption>
          <caption class="centering"><tag>Figure 3.7: </tag>Schemazeichnung eines STK500<cite>(<bibref bibrefs="atmel:ug_stk500" separator=";" show="Number" yyseparator=","/>)</cite></caption>
        </figure>
      </subsection>
      <subsection refnum="3.4.2" xml:id="Ch3.S4.SS2" labels="LABEL:sec:AVRISP">
        <title><tag>3.4.2 </tag>AVRISP mkII</title>
        <para xml:id="Ch3.S4.SS2.p1">
          <p>Der <emph>AVRISP mkII</emph>[<ref labelref="LABEL:sec:V_Hardware"/>] ist ein USB-basierter <text backgroundcolor="#D9D9FF">In-System-Programmer</text>. Dieser kann anstelle des RS-232 basierten Programmiersystem des STK500 verwendet werden.<break/>Die Übertragungsgeschwindigkeit des AVRISP mkII ist wesentlich höher als die der seriellen Schnittstelle.
<!-- %**** Inhalt/Kapitel_Hardware.tex Line 125 **** 
     %Desweiteren wurde der ATmega324A nicht mehr vom STK500 internen ISP unterstützt.\\-->Der AVRISP mkII lässt sich einfach an den Programmierport, eine 6-Polige Stiftleiste, des STK500 anschließen.</p>
        </para>
      </subsection>
      <subsection refnum="3.4.3" xml:id="Ch3.S4.SS3" labels="LABEL:sec:MAX232">
        <title><tag>3.4.3 </tag>MAX232</title>
        <para xml:id="Ch3.S4.SS3.p1">
          <p>Um die serielle Schnittstelle am Mikrocontroller nutzen zu können, müssen die Spannungspegel auf die des RS-232 Standards gewandelt werden. Dazu befindet sich auf dem STK500 der <text backgroundcolor="#D9D9FF">Pegelwandler</text> MAX232.
Dieser wandelt die Spannungspegel des Mikrocontrollers (typ. 0 V – 5 V <text backgroundcolor="#D9D9FF">TTL</text><note mark="4" role="footnote">Transistor-Transistor-Logik</note>) auf die Spannungspegel des RS-232 Standards (typ. -12 V – +12 V).
 <!-- %Hardware --></p>
        </para>
      </subsection>
    </section>
  </chapter>
  <chapter frefnum="Chapter 4" refnum="4" xml:id="Ch4" labels="LABEL:cha:Software">
    <title><tag>Chapter 4 </tag>Vorstellung der vorhandenen Software</title>
    <toctitle><tag>4 </tag>Vorstellung der vorhandenen Software</toctitle>
    <section refnum="4.1" xml:id="Ch4.S1" labels="LABEL:sec:RapidForm">
      <title><tag>4.1 </tag>RapidForm2004</title>
      <para xml:id="Ch4.S1.p1">
        <p>Zur Erfassung von 3D-Modellen am PC steht die Software <emph>RapidForm2004</emph>[<ref labelref="LABEL:sec:V_Software"/>] zur Verfügung. Diese ist zur Erfassung und Bearbeitung von 3D-Modellen gedacht. Sie bietet umfangreiche Möglichkeiten die aufgenommenen Modelle zu verbessern, zu verändern, zu vermessen und in verschiedene Formate zu exportieren.<break/>Mittels eines <text backgroundcolor="#D9D9FF">Add-In</text> kann der VI-900 angesteuert und aufgenommenen Daten ausgelesen werden. Weiterhin kann das Add-In über eine RS-232-Schnittstelle verschiedene Drehtische ansteuern.</p>
      </para>
    </section>
    <section refnum="4.2" xml:id="Ch4.S2" labels="LABEL:sec:Entwicklungsumgebung">
      <title><tag>4.2 </tag>Entwicklungsumgebung</title>
      <para xml:id="Ch4.S2.p1">
        <p>Die von Atmel bereitgestellte Entwicklungsumgebung <emph>AVR Studio 5</emph>[<ref labelref="LABEL:sec:V_Software"/>] besteht aus einem Editor, einem Compiler und einer Programmiersoftware. Der Editor bietet Komfortfunktionen wie <text backgroundcolor="#D9D9FF">Syntaxhighlighting</text>, Autovervollständigung und Projektmanagement. Der Compiler übersetzt den Quelltext in einen maschinenlesbaren Code und die Programmiersoftware kann diesen auf einen Mikrocontroller spielen.</p>
      </para>
    </section>
    <section refnum="4.3" xml:id="Ch4.S3" labels="LABEL:sec:Terminal">
      <title><tag>4.3 </tag>Terminalprogramme</title>
      <para xml:id="Ch4.S3.p1">
        <p>Zur Kommunikation über die RS-232-Schnittstelle steht das Programm <emph>Hypterminal</emph>[<ref labelref="LABEL:sec:V_Software"/>] zur Verfügung. Dieses wurde im Verlauf des Projekts durch das wesentlich umfangreichere Open Source Programm <emph>Putty</emph>[<ref labelref="LABEL:sec:V_Software"/>] abgelöst.
 <!-- %Software --></p>
      </para>
    </section>
  </chapter>
  <chapter frefnum="Chapter 5" refnum="5" xml:id="Ch5" labels="LABEL:cha:Arbeit">
    <title><tag>Chapter 5 </tag>Zeitlicher Arbeitsablauf</title>
    <toctitle><tag>5 </tag>Zeitlicher Arbeitsablauf</toctitle>
    <para xml:id="Ch5.p1">
      <p>Dieses Kapitel spiegelt den chronologischen Ablauf des Projektes wieder und zeigt die Schritte auf, die notwendig waren um den Mikrocontroller so zu programmieren, dass dieser die Kommunikation zwischen RapidForm2004 und der vorhandenen Schrittmotorkarte ermöglicht. So das er sozusagen als Übersetzer für die unterschiedlichen Befehlssätze von RapidForm2004 und dem der Schrittmotorkarte fungiert.
<!-- %\begin{Tipp}Die Codelistings in diesem Kapitel sind thematisch zusammen gefasst und gekürzt um die Lesbarkeit und das Verständnis zu gewährleisten. Ein komplettes Codelisting des Hauptprogramms befindet sich im Anhang \ref{sec:main.c}. Der komplette Code, mit allen Bibliotheken, liegt dem Praxisbericht als CD oder Archiv bei.\end{Tipp} -->Kapitel <ref labelref="LABEL:sec:Erste_Schritte"/> beschreibt die Programmierung des Mikrocontrollers, welche die notwendigen Grundvoraussetzungen für dieses Projekt schafft. Das Ziel dieser Programmierung besteht darin die geforderten Komponenten, LEDs, LC-Display, Taster und serielle Schnittstellen im Mikrocontroller nutzbar zu machen.<break/>Kapitel <ref labelref="LABEL:sec:Protokolle"/> beschreibt die Erarbeitung der Befehlssätze die die Software RapidForm2004 enthält um mit den von ihr unterstützten Schrittmotorkarten zu kommunizieren. Auch der Befehlssatz zur Kommunikation zwischen dem Mikrocontroller und der Schrittmotorkarte wird beschrieben.<break/>Kapitel <ref labelref="LABEL:sec:Komm_SM"/> beschreibt wie der Mikrocontroller diesen Befehlssatz für die Kommunikation mit der vorhandenen Schrittmotorkarte nutzt.<break/>Kapitel <ref labelref="LABEL:sec:Verbesserung_Hardware"/> gibt die Schritte zur Entwicklung und Verbesserung der Hardware, um diese so zu erweitern, dass sie den Vorgaben entspricht, wieder.<break/>Kapitel <ref labelref="LABEL:sec:Komm_RF2004"/> erläutert die Kommunikation zwischen dem Mikrocontroller und RapidForm2004. <break/>Kapitel <ref labelref="LABEL:sec:Auswerten_RF"/> beschreibt, wie die vorherigen Kapitel zusammenspielen, sodass eine reibungslose Kommunikation zwischen RapidForm2004 und der vorhandenen Schrittmotorkarte möglich ist.<break/>Kapitel <ref labelref="LABEL:sec:Platinenlayout"/> beschreibt dann das Erstellen des Platinenlayouts und das Fertigen des Einschubs.</p>
    </para>
    <section refnum="5.1" xml:id="Ch5.S1" labels="LABEL:sec:Erste_Schritte">
      <title><tag>5.1 </tag>Bereitstellen grundlegender Funktionalitäten</title>
      <para xml:id="Ch5.S1.p1">
        <p>Im ersten Schritt ging es darum, den Mikrocontroller so zu programmieren, dass dieser die für dieses Projekt grundlegenden Funktionalitäten bereitstellen kann.<break/>Der Mikrocontroller befand sich vorerst auf dem <text backgroundcolor="#D9D9FF">STK500</text>(siehe Kapitel <ref labelref="LABEL:sec:STK500"/>). Um dessen Komponenten im Mikrocontroller nutzen zu können, müssen dafür Register initialisiert werden oder Funktionalitäten wie z.B. Bibliotheken für das LC-Display bereit gestellt werden.<break/>Die folgenden Kapitel beschreiben den Programmcode, der notwendig ist um diese Funktionalitäten bereitzustellen.</p>
      </para>
      <subsection refnum="5.1.1" xml:id="Ch5.S1.SS1" labels="LABEL:sec:Taster">
        <title><tag>5.1.1 </tag>Taster</title>
        <para xml:id="Ch5.S1.SS1.p1">
          <p>Um die Taster des STK500 im Mikrocontroller nutzen zu können müssen diese mit dem Mikrocontroller verbunden und entprellt<note mark="5" role="footnote">Als <text backgroundcolor="#D9D9FF">Prellen</text> bezeichnet man das ungewollte mehrfache Schalten eines mechanischen Schalters bei einem einzelnen Schaltvorgang.</note> werden.<break/>Dazu muss die Stiftleiste von <emph>PortA</emph> mit der Stiftleiste für die Taster verbunden werden. Das Entprellen der Taster wird softwareseitig realisiert. Dies bietet sich bei einem Mikrocontroler an. Dazu gibt es vorgefertigte Bibliotheken die genutzt werden können. Im Projekt wurde die Bibliothek <text backgroundcolor="#FFFFE6" font="typewriter">Debounce.h</text><cite>(<bibref bibrefs="uc:dannegger" separator=";" show="Number" yyseparator=","/>)</cite> von Peter Dannegger genutzt. Sie ist sehr komfortabl und funktionsreich und basiert auf <text backgroundcolor="#D9D9FF">Timer-Interrupts</text>. Um sie zu nutzen wird die Datei <text backgroundcolor="#FFFFE6" font="typewriter">Debounce.h</text> in das Projektverzeichnis kopiert und mit Zeile 1 des Codelisting <ref labelref="LABEL:lst:Taster"/> in das Programm eingebunden. Die Zeilen 2-10 spiegeln die Funktion zum Initialisieren der Bibliothek wieder. Diese Zeilen müssen auf den jeweils verwendeten Mikrocontroller angepasst werden.<break/>Durch die Verwendung der Bibliothek ist es möglich Funktionen wie z.B. <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">get_key_press()</text> zu nutzen um den Status der Taster prellfrei auszulesen und diese Information für Entscheidungen im Programmablauf zu verwenden.</p>
        </para>
        <listing class="language_C" refnum="1" xml:id="LST1" labels="LABEL:lst:Taster">
          <toccaption><tag>1 </tag>Taster</toccaption>
          <caption><tag>Listing 1: </tag>Taster</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">include<text class="lstspace"> </text>”Debounce.h”<text class="lstspace">                           </text>//<text class="lstspace"> </text>Taster<text class="lstspace"> </text>entprellen</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">void<text class="lstspace">    </text>debounce_init<text class="lstspace">           </text>(void)<text class="lstspace"> </text>{<text class="lstspace">        </text>//<text class="lstspace"> </text>Taster<text class="lstspace"> </text>entprellen</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>KEY_DDR<text class="lstspace"> </text>&amp;=<text class="lstspace"> </text>~ALL_KEYS;<text class="lstspace">                   </text>//<text class="lstspace"> </text>configure<text class="lstspace"> </text>key<text class="lstspace"> </text>port<text class="lstspace"> </text>for<text class="lstspace"> </text>input</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>KEY_PORT<text class="lstspace"> </text>|=<text class="lstspace"> </text>ALL_KEYS;<text class="lstspace">                   </text>//<text class="lstspace"> </text>and<text class="lstspace"> </text>turn<text class="lstspace"> </text>on<text class="lstspace"> </text>pull<text class="lstspace"> </text>up<text class="lstspace"> </text>resistors</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>TCCR0B<text class="lstspace"> </text>=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>CS02)<text class="lstspace"> </text>|<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>CS00);<text class="lstspace">     </text>//<text class="lstspace"> </text>divide<text class="lstspace"> </text>by<text class="lstspace"> </text>1024</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace"> </text>preload<text class="lstspace"> </text>for<text class="lstspace"> </text>10ms</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>TCNT0<text class="lstspace"> </text>=<text class="lstspace"> </text>(uint8_t)<text class="lstspace"> </text>(int16_t)<text class="lstspace"> </text>-(F_CPU<text class="lstspace"> </text>/<text class="lstspace"> </text>1024<text class="lstspace"> </text>*<text class="lstspace"> </text>10<text class="lstspace"> </text>*<text class="lstspace"> </text>10e-3<text class="lstspace"> </text>+<text class="lstspace"> </text>0.5);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>TIMSK0<text class="lstspace"> </text>|=<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>TOIE0;<text class="lstspace">                   </text>//<text class="lstspace"> </text>enable<text class="lstspace"> </text>timer<text class="lstspace"> </text>interrupt</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>sei();<text class="lstspace">                                  </text>//<text class="lstspace"> </text>global<text class="lstspace"> </text>enable<text class="lstspace"> </text>Interrupts</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">if<text class="lstspace"> </text>(get_key_press(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>KEY4))</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>menu_select(&amp;menu_context);<text class="lstspace">             </text>//<text class="lstspace"> </text>Aktuellen<text class="lstspace"> </text>Menuepunkt<text class="lstspace"> </text>auswaehlen</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 25 **** -->
      </subsection>
      <subsection refnum="5.1.2" xml:id="Ch5.S1.SS2" labels="LABEL:sec:LED">
        <title><tag>5.1.2 </tag>LEDs</title>
        <para xml:id="Ch5.S1.SS2.p1">
          <p>LEDs sollen im Programmablauf genutzt werden können, um z.B. Fehler zu signalisieren.<break/>Dazu muss zuerst die Stiftleiste von <emph>PortB</emph> mit der LED Stiftleiste des STK500 verbunden werden. Um LEDs an <emph>PortB</emph> betreiben zu können müssen die entsprechenden Pins im <text backgroundcolor="#D9D9FF">Register</text> <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">DDRB</text> als Ausgänge definiert werden. Dies geschieht in Zeile 1 des Codelisting <ref labelref="LABEL:lst:LED"/>. Die Bibliothek zum Entprellen der Taster nutzt die Variablen <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">LED_DDR</text> und <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">LED_PORT</text>. Diese Variablen werden auch hier genutzt um auf die Register zuzugreifen. Dies gewährleistet eine bessere Übersicht. Die Werte im 8-Bit Register <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">LED_PORT</text> spiegeln die Spannungen an den Pins des <emph>PortB</emph> am Mikrocontroller wieder. Da die LEDs auf dem STK500 mit <text backgroundcolor="#D9D9FF">active-low-Logik</text> betrieben werden, muss das jeweilige Bit gelöscht, also auf ”0”, gesetzt werden damit die LED leuchtet. Um alle Bits in einem Register zu verändern kann das Register mit einem 2-stelligen Hex-Wert (8-Bit) oder einem 8 stelligen binären Bitmuster beschrieben werden. In Zeile 2 werden alle Bits mit dem Hex-Wert <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">0xFF</text> auf ”1” gesetzt und somit alle LEDs ausgeschaltet. Um ein einzelnes Bit zu verändern, können die Anweisungen in den Zeilen 3 und 4 verwendet werden. Dabei steht das ”X” in <emph>PBX</emph> für die x-te Stelle im Register die gesetzt oder gelöscht werden soll.<break/>Es ist damit möglich im Programmablauf einzelne LEDs anzusteuern.</p>
        </para>
        <listing class="language_C" refnum="2" xml:id="LST2" labels="LABEL:lst:LED">
          <toccaption><tag>2 </tag>LEDs</toccaption>
          <caption><tag>Listing 2: </tag>LEDs</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">LED_DDR<text class="lstspace">   </text>=<text class="lstspace"> </text>0xFF;<text class="lstspace">                 </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">LED<text class="lstspace"> </text>Port<text class="lstspace"> </text>Richtung<text class="lstspace"> </text>definieren<text class="lstspace"> </text>(Ausgang)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">LED_PORT<text class="lstspace">  </text>=<text class="lstspace"> </text>0xFF;<text class="lstspace">                  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">LEDs<text class="lstspace"> </text>ausschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">LED_PORT<text class="lstspace"> </text>&amp;=<text class="lstspace"> </text>~((1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>PBX));<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">loescht<text class="lstspace"> </text>Bit<text class="lstspace"> </text>an<text class="lstspace"> </text>PortB<text class="lstspace"> </text>-<text class="lstspace"> </text>LED<text class="lstspace"> </text>an</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">LED_PORT<text class="lstspace"> </text>|=<text class="lstspace">  </text>((1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>PBX));<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">setzt<text class="lstspace">  </text>Bit<text class="lstspace"> </text>an<text class="lstspace"> </text>PortB<text class="lstspace"> </text>-<text class="lstspace"> </text>LED<text class="lstspace"> </text>aus</text></text>
              </td>
            </tr>
          </tabular>
        </listing>
      </subsection>
      <subsection refnum="5.1.3" xml:id="Ch5.S1.SS3" labels="LABEL:sec:LCD">
        <title><tag>5.1.3 </tag>Ansteuerung des LC-Display</title>
        <para xml:id="Ch5.S1.SS3.p1">
          <p>Um den aktuellen Status des Motor komfortabel in Textform anzeigen zu können und die Schrittmotorkarte <emph>menübasiert</emph> ansteuern zu können wird ein <text backgroundcolor="#D9D9FF">LC-Display</text> verwendet. Das verwendete Display ist <text backgroundcolor="#D9D9FF">alpha numerisch</text> und kann 4x20 Zeichen anzeigen.<break/>Die meisten LC-Displays werden auf die gleiche Weise angesteuert. Hier gibt es fertige Bibliotheken die frei genutzt werden können. Im Projekt wurde die Bibliothek von Peter Fleury <cite>(<bibref bibrefs="uc:fleury" separator=";" show="Number" yyseparator=","/>)</cite> verwendet. Die Bibliothek wird heruntergeladen und die Dateien <text backgroundcolor="#FFFFE6" font="typewriter">lcd.c</text> und <text backgroundcolor="#FFFFE6" font="typewriter">lcd.h</text> in das Projektverzeichnis entpackt. Die Bibliothek wird mit <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">#include ''lcd.h''</text> eingebunden. In der <text backgroundcolor="#FFFFE6" font="typewriter">lcd.h</text> müssen dann noch die Daten des Displays eingegeben werden (siehe Codelisting <ref labelref="LABEL:lst:LCD"/> Zeilen 2–10).<break/>Danach kann das Display im Programm mit den Befehlen aus Zeile 12–21 angesteuert werden.</p>
        </para>
        <listing class="language_C" refnum="3" xml:id="LST3" labels="LABEL:lst:LCD">
          <toccaption><tag>3 </tag>lcd.h (Auszug)</toccaption>
          <caption><tag>Listing 3: </tag>lcd.h (Auszug)</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">/*<text color="#008000">*&lt;<text class="lstspace"> </text>Use<text class="lstspace"> </text>0<text class="lstspace"> </text>for<text class="lstspace"> </text>HD44780<text class="lstspace"> </text>controller,<text class="lstspace">  </text>1<text class="lstspace"> </text>for<text class="lstspace"> </text>KS0073<text class="lstspace"> </text>controller<text class="lstspace"> </text></text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_CONTROLLER_KS0073<text class="lstspace"> </text>0</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_LINES<text class="lstspace">           </text>4<text class="lstspace">          </text>/*<text color="#008000">*&lt;<text class="lstspace"> </text>number<text class="lstspace"> </text>of<text class="lstspace"> </text>visible<text class="lstspace"> </text>lines<text class="lstspace"> </text>of<text class="lstspace"> </text>the<text class="lstspace"> </text>display<text class="lstspace"> </text></text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_DISP_LENGTH<text class="lstspace">    </text>19<text class="lstspace">           </text>/**&lt;<text class="lstspace"> </text>visibles<text class="lstspace"> </text>characters<text class="lstspace"> </text>per<text class="lstspace"> </text>line<text class="lstspace"> </text>of<text class="lstspace"> </text>the<text class="lstspace"> </text>display<text class="lstspace"> </text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_LINE_LENGTH<text class="lstspace">  </text>0x40<text class="lstspace">           </text>/*<text color="#008000">*&lt;<text class="lstspace"> </text>internal<text class="lstspace"> </text>line<text class="lstspace"> </text>length<text class="lstspace"> </text>of<text class="lstspace"> </text>the<text class="lstspace"> </text>display<text class="lstspace">   </text></text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_START_LINE1<text class="lstspace">  </text>0x00<text class="lstspace">           </text>/**&lt;<text class="lstspace"> </text>DDRAM<text class="lstspace"> </text>address<text class="lstspace"> </text>of<text class="lstspace"> </text>first<text class="lstspace"> </text>char<text class="lstspace"> </text>of<text class="lstspace"> </text>line<text class="lstspace"> </text>1<text class="lstspace"> </text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_START_LINE2<text class="lstspace">  </text>0x40<text class="lstspace">           </text>/*<text color="#008000">*&lt;<text class="lstspace"> </text>DDRAM<text class="lstspace"> </text>address<text class="lstspace"> </text>of<text class="lstspace"> </text>first<text class="lstspace"> </text>char<text class="lstspace"> </text>of<text class="lstspace"> </text>line<text class="lstspace"> </text>2<text class="lstspace"> </text></text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_START_LINE3<text class="lstspace">  </text>0x14<text class="lstspace">           </text>/**&lt;<text class="lstspace"> </text>DDRAM<text class="lstspace"> </text>address<text class="lstspace"> </text>of<text class="lstspace"> </text>first<text class="lstspace"> </text>char<text class="lstspace"> </text>of<text class="lstspace"> </text>line<text class="lstspace"> </text>3<text class="lstspace"> </text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_START_LINE4<text class="lstspace">  </text>0x54<text class="lstspace">           </text>/*<text color="#008000">*&lt;<text class="lstspace"> </text>DDRAM<text class="lstspace"> </text>address<text class="lstspace"> </text>of<text class="lstspace"> </text>first<text class="lstspace"> </text>char<text class="lstspace"> </text>of<text class="lstspace"> </text>line<text class="lstspace"> </text>4<text class="lstspace"> </text></text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>LCD_WRAP_LINES<text class="lstspace">      </text>1<text class="lstspace">           </text>/**&lt;<text class="lstspace"> </text>0:<text class="lstspace"> </text>no<text class="lstspace"> </text>wrap,<text class="lstspace"> </text>1:<text class="lstspace"> </text>wrap<text class="lstspace"> </text>at<text class="lstspace"> </text>end<text class="lstspace"> </text>of<text class="lstspace"> </text>visibile<text class="lstspace"> </text>line<text class="lstspace"> </text>*/</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace"> </text>Funktionen<text class="lstspace"> </text>zum<text class="lstspace"> </text>Ansteuern<text class="lstspace"> </text>des<text class="lstspace"> </text>Displays:</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_init(uint8_t<text class="lstspace"> </text>dispAttr);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_clrscr(void);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">14</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_home(void);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">15</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_gotoxy(uint8_t<text class="lstspace"> </text>x,<text class="lstspace"> </text>uint8_t<text class="lstspace"> </text>y);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">16</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_putc(char<text class="lstspace"> </text>c);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">17</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_puts(const<text class="lstspace"> </text>char<text class="lstspace"> </text>*s);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">18</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_puts_p(const<text class="lstspace"> </text>char<text class="lstspace"> </text>*progmem_s);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">19</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_command(uint8_t<text class="lstspace"> </text>cmd);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">20</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">extern<text class="lstspace"> </text>void<text class="lstspace"> </text>lcd_data(uint8_t<text class="lstspace"> </text>data);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">21</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>lcd_puts_P(__s)<text class="lstspace"> </text>lcd_puts_p(PSTR(__s))</text>
              </td>
            </tr>
          </tabular>
        </listing>
      </subsection>
      <subsection refnum="5.1.4" xml:id="Ch5.S1.SS4" labels="LABEL:sec:RS232">
        <title><tag>5.1.4 </tag>RS-232-Schnittstelle</title>
        <para xml:id="Ch5.S1.SS4.p1">
          <p><text backgroundcolor="#D9D9FF">RS-232</text> ist der Name der am häufigsten verwendeten seriellen Schnittstelle um Daten zwischen zwei elektronischen Geräten hin und her zu senden. <cite>(<bibref bibrefs="uc:rs232" separator=";" show="Number" yyseparator=","/>)</cite><break/>Auf dem STK500 ist bereits eine serielle Schnittstelle vorbereitet. Um diese nutzen zu können, müssen die Pins 3 und 4 des <emph>PortC</emph> (erster <text backgroundcolor="#D9D9FF">UART</text>) des Mikrocontrollers mit der Stiftleiste <emph>Rx/Tx</emph> auf dem STK500 verbunden werden. Eine weitere Schnittstelle wurde auf einem Steckbrett aufgebaut. Diese wurde mit den Pins 1 und 2 des <emph>PortC</emph> (zweiter UART) des Mikrocontrollers verbunden. Um die Schnittstellen im Mikrocontroller nutzen zu können müssen diese noch durch setzen von Bits in den entsprechenden Registern des Mikrocontrollers aktiviert werden.<break/>Das Codelisting <ref labelref="LABEL:lst:RS232"/> teilt sich in 4 wesentliche Bereiche: <break/></p>
          <itemize xml:id="Ch5.I1">
            <item xml:id="Ch5.I1.i1">
              <para xml:id="Ch5.I1.i1.p1">
                <p>Zeilen 1 – 2: Setzen der Baudrate und einbinden der benötigten Bibliotheken.</p>
              </para>
            </item>
            <item xml:id="Ch5.I1.i2">
              <para xml:id="Ch5.I1.i2.p1">
                <p>Zeilen 3 – 17: Initialisieren der Schnittstellen durch setzen der richtigen Bits in den entsprechenden Registern.
<!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 50 **** --></p>
              </para>
            </item>
            <item xml:id="Ch5.I1.i3">
              <para xml:id="Ch5.I1.i3.p1">
                <p>Zeilen 18 – 35: Funktionen zum Senden von Daten</p>
              </para>
            </item>
            <item xml:id="Ch5.I1.i4">
              <para xml:id="Ch5.I1.i4.p1">
                <p>Zeilen 36 – 65: Funktionen zum Empfangen von Daten</p>
              </para>
            </item>
          </itemize>
        </para>
        <listing class="language_C" refnum="4" xml:id="LST4" labels="LABEL:lst:RS232">
          <toccaption><tag>4 </tag>RS-232</toccaption>
          <caption><tag>Listing 4: </tag>RS-232</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>BAUD<text class="lstspace"> </text>9600<text class="lstspace">               </text>//<text class="lstspace"> </text>BAUD<text class="lstspace"> </text>Rate<text class="lstspace"> </text>definieren</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">keywordstyle <text class="lstdirectives">include</text><text class="lstspace"> </text>&lt;util/setbaud.h&gt;<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>Funktionen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>Initialisieren</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>uart_init<text class="lstspace">                </text>()<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>0<text class="lstspace"> </text>-<text class="lstspace"> </text>IN<text class="lstspace"> </text>(Rapidform<text class="lstspace"> </text>Software/Terminal)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UBRR0H<text class="lstspace"> </text>=<text class="lstspace"> </text>UBRRH_VALUE;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UBRR0L<text class="lstspace"> </text>=<text class="lstspace"> </text>UBRRL_VALUE;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UCSR0C<text class="lstspace"> </text>=<text class="lstspace"> </text>(3<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>UCSZ00);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UCSR0B<text class="lstspace"> </text>|=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>TXEN0);<text class="lstspace">    </text>//<text color="#008000">Transmitter<text class="lstspace"> </text>Enabled</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UCSR0B<text class="lstspace"> </text>|=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXEN0);<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>RX<text class="lstspace"> </text>einschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>1<text class="lstspace"> </text>-<text class="lstspace"> </text>OUT<text class="lstspace"> </text>(Stepper<text class="lstspace"> </text>Karte/Drehtisch)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UBRR1H<text class="lstspace"> </text>=<text class="lstspace"> </text>UBRRH_VALUE;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UBRR1L<text class="lstspace"> </text>=<text class="lstspace"> </text>UBRRL_VALUE;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">14</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UCSR1C<text class="lstspace"> </text>=<text class="lstspace"> </text>(3<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>UCSZ00);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">15</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UCSR1B<text class="lstspace"> </text>|=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>TXEN1);<text class="lstspace">    </text>//<text color="#008000">Transmitter<text class="lstspace"> </text>Enabled</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">16</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>UCSR1B<text class="lstspace"> </text>|=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXEN1);<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>RX<text class="lstspace"> </text>einschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">17</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">18</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>senden</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">19</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>uart_put_charater<text class="lstspace">        </text>(<text class="lstkeywords" color="#FF0000">unsigned</text><text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>c,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>dir)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">20</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(dir<text class="lstspace"> </text>==<text class="lstspace"> </text>D_RapidForm)<text class="lstspace"> </text>{<text class="lstspace">       </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">To<text class="lstspace"> </text>Rapidform</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">21</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(!(UCSR0A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>UDRE0)))<text class="lstspace"> </text>{}//<text color="#008000">warten<text class="lstspace"> </text>bis<text class="lstspace"> </text>Senden<text class="lstspace"> </text>moeglich</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">22</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>UDR0<text class="lstspace"> </text>=<text class="lstspace"> </text>c;<text class="lstspace">            </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">sende<text class="lstspace"> </text>Zeichen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">23</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">24</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">else</text><text class="lstspace"> </text>{<text class="lstspace">                              </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">To<text class="lstspace"> </text>Stepper</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">25</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(!(UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>UDRE1)))<text class="lstspace"> </text>{}//<text color="#008000">warten<text class="lstspace"> </text>bis<text class="lstspace"> </text>Senden<text class="lstspace"> </text>moeglich</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">26</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>UDR1<text class="lstspace"> </text>=<text class="lstspace"> </text>c;<text class="lstspace">            </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">sende<text class="lstspace"> </text>Zeichen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">27</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">28</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">29</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>String<text class="lstspace"> </text>senden</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">30</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>uart_put_string<text class="lstspace">                </text>(<text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*s,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>dir)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">31</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(*s){<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">so<text class="lstspace"> </text>lange<text class="lstspace"> </text>*s<text class="lstspace"> </text>!=<text class="lstspace"> </text>’\0’<text class="lstspace"> </text>Terminierungszeichen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">32</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_put_charater(*s,<text class="lstspace"> </text>dir);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zeichenweise<text class="lstspace"> </text>senden</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">33</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>s++;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">34</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">35</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">36</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>empfangen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">37</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace">        </text>uart_get_character<text class="lstspace">        </text>(<text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>dir)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">38</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(dir<text class="lstspace"> </text>==<text class="lstspace"> </text>D_RapidForm)<text class="lstspace"> </text>{<text class="lstspace">       </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Aus<text class="lstspace"> </text>RapidForm<text class="lstspace"> </text>Register<text class="lstspace"> </text>auslesen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">39</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(!(UCSR0A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC0)))<text class="lstspace"> </text>;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">warten<text class="lstspace"> </text>bis<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>verfuegbar</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">40</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>UDR0;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zeichen<text class="lstspace"> </text>aus<text class="lstspace"> </text>UDR<text class="lstspace"> </text>an<text class="lstspace"> </text>Aufrufer<text class="lstspace"> </text>zurueckgeben</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">41</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">42</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(dir<text class="lstspace"> </text>==<text class="lstspace"> </text>D_Stepper)<text class="lstspace"> </text>{<text class="lstspace">               </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Aus<text class="lstspace"> </text>Schrittmotor<text class="lstspace"> </text>Register<text class="lstspace"> </text>auslesen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">43</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(!(UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1)))<text class="lstspace"> </text>;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">warten<text class="lstspace"> </text>bis<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>verfuegbar</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">44</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>UDR1;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zeichen<text class="lstspace"> </text>aus<text class="lstspace"> </text>UDR<text class="lstspace"> </text>an<text class="lstspace"> </text>Aufrufer<text class="lstspace"> </text>zurueckgeben</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">45</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">46</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>-1;<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Wenn<text class="lstspace"> </text>nichts<text class="lstspace"> </text>ausgelesen<text class="lstspace"> </text>wurde<text class="lstspace"> </text>-1<text class="lstspace"> </text>zurueckgeben</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">47</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">48</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>String<text class="lstspace"> </text>empfangen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">49</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>uart_get_string<text class="lstspace">                </text>(<text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>string_in,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>dir)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">50</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>c;<text class="lstspace">              </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Einzelnes<text class="lstspace"> </text>Zeichen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">51</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>i<text class="lstspace"> </text>=<text class="lstspace"> </text>0;<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zaehlvariable</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">52</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">do</text><text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">53</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>c<text class="lstspace"> </text>=<text class="lstspace"> </text>uart_get_character(dir);<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Einzelnes<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>holen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">54</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(c<text class="lstspace"> </text>!=<text class="lstspace"> </text>’<text color="#000000">\r</text>’)<text class="lstspace"> </text>{<text class="lstspace">           </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Wenn<text class="lstspace"> </text>keinn<text class="lstspace"> </text>\r</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">55</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>*string_in<text class="lstspace"> </text>=<text class="lstspace"> </text>c;<text class="lstspace">           </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zeichen<text class="lstspace"> </text>in<text class="lstspace"> </text>Empfangsstring<text class="lstspace"> </text>schreiben</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">56</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>string_in<text class="lstspace"> </text>+=<text class="lstspace"> </text>1;<text class="lstspace">          </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Adresse<text class="lstspace"> </text>des<text class="lstspace"> </text>Empfangsstring<text class="lstspace"> </text>um<text class="lstspace"> </text>1<text class="lstspace"> </text>ink</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">57</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>i++;<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zaehlvariable<text class="lstspace"> </text>um<text class="lstspace"> </text>1<text class="lstspace"> </text>erhoehen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">58</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">59</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(i<text class="lstspace"> </text>&lt;<text class="lstspace"> </text>100<text class="lstspace"> </text>&amp;&amp;<text class="lstspace"> </text>c<text class="lstspace"> </text>!=<text class="lstspace"> </text>’<text color="#000000">\r</text>’<text class="lstspace"> </text>&amp;&amp;<text class="lstspace"> </text>c<text class="lstspace"> </text>!=<text class="lstspace"> </text>’<text color="#000000">\n</text>’);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">So<text class="lstspace"> </text>lange<text class="lstspace"> </text>bis<text class="lstspace"> </text>\r<text class="lstspace"> </text>\n<text class="lstspace"> </text>o.<text class="lstspace"> </text>&gt;100<text class="lstspace"> </text>Zeichen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">60</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>*string_in<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text color="#000000">\0</text>’;<text class="lstspace">                       </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">0<text class="lstspace"> </text>Terminieren</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">61</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(dir<text class="lstspace"> </text>==<text class="lstspace"> </text>D_Stepper)</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">62</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>LED_PORT<text class="lstspace"> </text>|=<text class="lstspace"> </text>(<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED3<text class="lstspace"> </text>);<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">”Daten<text class="lstspace"> </text>Vorhanden”<text class="lstspace"> </text>LED<text class="lstspace"> </text>ausschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">63</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">
                  <text class="lstspace">        </text>
                  <text class="lstkeywords" color="#FF0000">else</text>
                </text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">64</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>LED_PORT<text class="lstspace"> </text>|=<text class="lstspace"> </text>(<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED2<text class="lstspace"> </text>);<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">”Daten<text class="lstspace"> </text>Vorhanden”<text class="lstspace"> </text>LED<text class="lstspace"> </text>ausschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">65</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <para xml:id="Ch5.S1.SS4.p2">
          <p>Damit stehen die essentiellen Funktionen <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_put_string(dir)</text> und <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_get_string(dir)</text> zur Verfügung. Mit diesen kann der Mikrocontroller über die serielle Schnittstelle Strings senden und empfangen. Der Parameter <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">dir</text> gibt dabei die Schnittstelle an über die gesendet oder empfangen werden soll.</p>
        </para>
      </subsection>
    </section>
    <section refnum="5.2" xml:id="Ch5.S2" labels="LABEL:sec:Protokolle">
      <title><tag>5.2 </tag>Befehlssätze</title>
      <para xml:id="Ch5.S2.p1">
        <p>Das zu erreichende Ziel bestand darin, dass RapidForm2004 mit dem Mikrocontroller und dieser mit der Schrittmotorkarte kommunizieren können sollte. Die Kommunikation läuft dabei über Befehle ab, die über die serielle Schnittstelle gesendet werden.
<!-- %Die Befehlssätze die im Projekt verwendet werden um mit den Schrittmotorsteuerungen zu kommunizieren, werden als Protokolle bezeichnet. In diesen Protokollen ist geregelt, welche Befehle ausgesendet werden müssen und welche Antworten auf diese Befehle erwartet werden.\\ -->Jede Schrittmotorkarte verwendet eigenen Befehle. Alle Befehle für eine Schrittmotorkarte werden im Folgenden als Befehlssatz bezeichnet. Die Software RapidForm2004 kennt mehrere Befehlssätze um verschiedene Schrittmotorkarten anzusteuern. Der Befehlssatz der vorhandenen Schrittmotorkarten zum Ansteuern der Motoren des Drehtisches ist jedoch nicht in RapidForm2004 vorhanden.<break/>Nun soll der Mikrocontroller sowohl mit RapidForm2004 als auch mit der ersten der vorhandenen Schrittmotorkarten kommunizieren. Befehle an die zweite Schrittmotorkarte werden über die Erste gesendet. Um mit beiden Seiten kommunizieren zu können muss der Mikrocontroller den Befehlssatz der vorhanden Schrittmotorkarten und zumindest einen der Befehlssätze aus RapidForm2004 kennen. Außerdem muss er wissen welche Antwort RapidForm2004 auf einen gesendeten Befehl erwartet. <break/>In der ersten Phase wurde die Software <emph>Free Serial Port Monitor</emph> verwendet um die Kommunikation zwischen RapidForm2004 und dem Mikrocontroller abzuhören. Dies hatte jedoch den Nachteil, das RapidForm2004 erst dann den nächsten Befehl sendete, wenn der Erste mit der erwarteten Antwort quittiert wurde. Die Befehle die RapidForm erwartete, konnten zwar teilweise aus den Betriebsanleitungen der Schrittmotorsteuerungen entnommen werden, dieses Vorgehen war jedoch sehr mühsam. Eine besseres Vorgehen, war das sogenannte <text backgroundcolor="#D9D9FF">Reverse-Engineering</text>. Dadurch konnten alle Befehe und die darauf erwarteten Antworten aus einer ausführbaren Datei von RapidForm2004 ausgelesen werden.<break/>Das Codelisting <ref labelref="LABEL:lst:Proto_RF_Isel"/> zeigt einen Auszug für den Befehlssatz eines Isel Schrittmotors. Im Anhang <ref labelref="LABEL:sec:Protokolle_RF"/> befinden sich die Befehlssätze aller Schrittmotorkarten. Somit stehen die Befehlssätze aller Schrittmotorsteuerungen zur Verfügung. Diese wurden in einer Textdatei gespeichert und werden später im Programm verwendet. Dadurch sind alle Befehle und die Antworten die RapidForm2004 auf einen daraus ausgesendeten Befehl erwartet bekannt.
<!-- %\begin{Tipp}In Codelistings und im Quelltext wird teilweise noch die Bezeichnung \emph{Protokolle} statt \emph{Befehlssätze} verwendet. Diese sind gleichbedeutend.\end{Tipp} --></p>
      </para>
      <listing class="language_C" refnum="5" xml:id="LST5" labels="LABEL:lst:Proto_RF_Isel">
        <toccaption><tag>5 </tag>Befehlssatz aus Rapidform: Isel</toccaption>
        <caption><tag>Listing 5: </tag>Befehlssatz aus Rapidform: Isel</caption>
        <tabular>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">1</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">model<text class="lstspace">        </text>”<text color="#000000">isel(RF-1)</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">2</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">port<text class="lstspace">        </text>”<text color="#000000">9600</text>”<text class="lstspace">                  </text>”<text color="#000000">n81h</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">3</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">init<text class="lstspace">        </text>”<text color="#000000">@01\r</text>”<text class="lstspace">                 </text>”<text color="#000000">0</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">4</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">finish<text class="lstspace">        </text>”<text color="#000000">@0M0\054+600\r</text>”<text class="lstspace">        </text>”<text color="#000000">0</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">5</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">arot<text class="lstspace">        </text>”<text color="#000000">@0M%d\054+600\r</text>”<text class="lstspace">       </text>”<text color="#000000">0</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">6</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">stop<text class="lstspace">        </text>””<text class="lstspace">                      </text>”<text color="#000000">0</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">7</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">home<text class="lstspace">        </text>”<text color="#000000">@0M0\054+600\r</text>”<text class="lstspace">        </text>”<text color="#000000">0</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">8</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">step<text class="lstspace">        </text>”<text color="#000000">-0.0173076</text>”<text class="lstspace"> </text>”<text color="#000000">-8000000</text>”<text class="lstspace"> </text>”<text color="#000000">8000000</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">9</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">timeout<text class="lstspace"> </text>”<text color="#000000">60</text>”</text>
            </td>
          </tr>
          <tr>
            <td class="linenumber">
              <text fontsize="tiny">10</text>
            </td>
            <td>
              <text class="lstline" fontsize="footnote">firsttimeout<text class="lstspace"> </text>”<text color="#000000">10</text>”</text>
            </td>
          </tr>
        </tabular>
      </listing>
    </section>
    <section refnum="5.3" xml:id="Ch5.S3" labels="LABEL:sec:Komm_SM">
      <title><tag>5.3 </tag>Kommunikation mit der vorhandenen Schrittmotorsteuerung</title>
      <subsection refnum="5.3.1" xml:id="Ch5.S3.SS1" labels="LABEL:sec:menu">
        <title><tag>5.3.1 </tag>Befehle senden</title>
        <para xml:id="Ch5.S3.SS1.p1">
          <p>Im nächsten Schritt geht es darum, Befehle an die Schrittmotorkarte zu versenden. Da es nicht möglich ist, für jeden Befehl eine eigene Taste zu verwenden,
wird eine menübasierte Steuerung mittels des LC-Displays verwendet. Im Menü lässt sich mit den Tasten <emph>Hoch</emph>, <emph>Runter</emph>, <emph>Ok</emph>, und <emph>Zurück</emph>, navigieren.<break/><!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 75 **** -->Analog wie beim LC-Display und bei den Tastern wird hier eine vorhandene Bibliothek genutzt. Um die Bibliothek verwenden zu können musste die Menüstruktur den Bedürfnissen des Projekts angepasst werden und die Funktionen zum Ausgeben von Text auf dem LC-Display und zum Versenden von Befehlen über die RS-232-Schnittstelle, aus den vorangegangen Kapiteln, bekannt gemacht werden. Dies geschieht in der Datei <text backgroundcolor="#FFFFE6" font="typewriter">tinymenu/tinymenu.h</text>.<break/>Die Zeilen 1–6 des Codelisting <ref labelref="LABEL:lst:Menu"/> dienen zum Einbinden der benötigten Bibliotheken. Die Zeilen 8–20 zeigen eine vereinfachte Struktur des Hauptprogramms. Wird ein Taster gedrückt, wird dies durch die <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">get_key_press()</text>-Funktion, bekannt aus Kapitel <ref labelref="LABEL:sec:Taster"/>, erkannt und die entsprechende Menü Funktion aufgerufen.</p>
        </para>
        <listing class="language_C" refnum="6" xml:id="LST6" labels="LABEL:lst:Menu">
          <toccaption><tag>6 </tag>Menü</toccaption>
          <caption><tag>Listing 6: </tag>Menü</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>MCU_CLK<text class="lstspace"> </text>F_CPU</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">keywordstyle <text class="lstdirectives">include</text><text class="lstspace"> </text>”<text color="#000000">tinymenu/spin_delay.h</text>”</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>CONFIG_TINYMENU_USE_CLEAR</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">keywordstyle <text class="lstdirectives">include</text><text class="lstspace"> </text>”<text color="#000000">tinymenu/tinymenu.h</text>”</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">include<text class="lstspace"> </text>”tinymenu/tinymenu_hw.h”</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">keywordstyle <text class="lstdirectives">include</text><text class="lstspace"> </text>”<text color="#000000">mymenu.h</text>”</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">Gekuerzte<text class="lstspace"> </text>Main-Funktion</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>main(<text class="lstkeywords" color="#FF0000">void</text>)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(1)<text class="lstspace"> </text>{<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">In<text class="lstspace"> </text>Endlosschleife<text class="lstspace"> </text>wechseln</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>wdt_reset();<text class="lstspace">     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Watchdog<text class="lstspace"> </text>zuruecksetzen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(get_key_press(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>KEY1))<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">1<text class="lstspace"> </text>-<text class="lstspace"> </text>Zurueck</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>menu_exit(&amp;menu_context);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(<text class="lstspace"> </text>get_key_press(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>KEY2))<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">2<text class="lstspace"> </text>-<text class="lstspace"> </text>Hoch</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">14</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>menu_prev_entry(&amp;menu_context);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">15</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(get_key_press(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>KEY3))<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Runter</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">16</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>menu_next_entry(&amp;menu_context);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">17</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(get_key_press(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>KEY4))<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">4<text class="lstspace"> </text>-<text class="lstspace"> </text>Ok</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">18</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>menu_select(&amp;menu_context);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">19</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">20</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">21</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">Funktion<text class="lstspace"> </text>zum<text class="lstspace"> </text>senden<text class="lstspace"> </text>der<text class="lstspace"> </text>Menuepunkte<text class="lstspace"> </text>ueber<text class="lstspace"> </text>die<text class="lstspace"> </text>serielle<text class="lstspace"> </text>Schnittstelle</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">22</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>menu_puts<text class="lstspace">                </text>(<text class="lstkeywords" color="#FF0000">void</text><text class="lstspace"> </text>*arg,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*name)<text class="lstspace"> </text>{<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Menu/Sende<text class="lstspace"> </text>Funktion</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">23</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_put_string(arg,<text class="lstspace"> </text>D_Stepper);<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebergebenen<text class="lstspace"> </text>String<text class="lstspace"> </text>an<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>senden</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">24</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Befehl<text class="lstspace"> </text>auf<text class="lstspace"> </text>Display<text class="lstspace"> </text>ausgeben</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">25</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_clrscr();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">26</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text color="#000000">Sent:<text class="lstspace"> </text></text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">27</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(arg);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">28</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text color="#000000">\n</text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">29</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(100);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">30</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text color="#008000">if<text class="lstspace"> </text>((UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1)))</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">31</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_rx(D_Stepper);<text class="lstspace">     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Antwort<text class="lstspace"> </text>des<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>empfangen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">32</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(1000);<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Antwort<text class="lstspace"> </text>noch<text class="lstspace"> </text>eine<text class="lstspace"> </text>weile<text class="lstspace"> </text>Anzeigen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">33</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <para xml:id="Ch5.S3.SS1.p2">
          <p>Folgende Menüpunkte wurden realisiert:</p>
        </para>
        <listing class="language_C" refnum="7" xml:id="LST7" labels="LABEL:lst:Menu_Baum">
          <toccaption><tag>7 </tag>Menü Baum</toccaption>
          <caption><tag>Listing 7: </tag>Menü Baum</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">Main<text class="lstspace"> </text>Menu</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>Bewegen<text class="lstspace"> </text>-<text class="lstspace"> </text>Rotation</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>+90</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>-90</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>+10.000<text class="lstspace"> </text>Schritte</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>-10.000<text class="lstspace"> </text>Schritte</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Gehe<text class="lstspace"> </text>zum<text class="lstspace"> </text>Uhrsprung</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>Bewegen<text class="lstspace"> </text>-<text class="lstspace"> </text>Hoehe</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>+500000</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>-500000</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>+1000000</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>-1000000</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Gehe<text class="lstspace"> </text>zum<text class="lstspace"> </text>Ursprung</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">14</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>Konfigurieren</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">15</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Motorstatus</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">16</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Setze<text class="lstspace"> </text>Ursprung</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">17</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Write<text class="lstspace"> </text>to<text class="lstspace"> </text>EEPROM</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">18</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Newline<text class="lstspace"> </text>1</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">19</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>Parameter<text class="lstspace"> </text>Auslesen</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <para xml:id="Ch5.S3.SS1.p3">
          <p>Wird einer der Menüpunkte aufgerufen, wird die im Menüpunkt hinterlegte Funktion mit dem hinterlegten Parameter aufgerufen. Wird beispielsweise der Befehl <emph>+90</emph> ausgewählt, wird die hinterlegte Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">menu_puts(arg, name)</text>(Codelisting <ref labelref="LABEL:lst:Menu"/> Zeile 18-28) mit dem hinterlegten Wert aufgerufen. Diese sendet dann mit der aus Kapitel <ref labelref="LABEL:sec:RS232"/> bekannten Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_puts(arg, dir)</text> einen Befehl an die Schrittmotorsteuerung.<break/>Es ist somit nun möglich mit Tastern vordefinierte Befehle aus dem Menü auszuwählen und an die Schrittmotorsteuerung zu senden.</p>
        </para>
      </subsection>
      <subsection refnum="5.3.2" xml:id="Ch5.S3.SS2" labels="LABEL:sec:Empfangen_Schrittmotor">
        <title><tag>5.3.2 </tag>Antworten empfangen und speichern</title>
        <para xml:id="Ch5.S3.SS2.p1">
          <p>Die Schrittmotorsteuerung antwortet auf Befehle mit einem <text backgroundcolor="#D9D9FF">String</text>. In diesem Arbeitsschritt wird die Funktionalität zum Empfangen von Antworten der Schrittmotorsteuerung auf Befehle des Mikrocontrollers hergestellt. Diese Antworten sollen in einem String gespeichert und im nächsten Schritt an eine <emph>Auswerte-Funktion</emph> weiter gegeben werden.<break/>Dazu wird in der Hauptschleife des Programms ständig das Eingangsregister der ersten seriellen Schnittstelle abgefragt (siehe Codelisting <ref labelref="LABEL:lst:rs232empfangstepper"/> Zeile 10–13). Dieses Vorgehen bezeichnet man als <text backgroundcolor="#D9D9FF">Polling</text>.
Sind Daten im Register vorhanden, wird <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">LED3</text> eingeschaltet und die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_rx(int dir)</text> mit dem Parameter <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">D_Stepper</text> aufgerufen. Der übergebene Parameter gibt an, dass der Befehl von der für die Schrittmotorkarte zuständigen Schnittstelle empfangen wurde. Dadurch wird sichergestellt, dass der empfangene <text backgroundcolor="#D9D9FF">String</text> aus dem richtigen Datenempfangsregister ausgelesen wird und festgelegt wie er weiterverarbeitet wird. Die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_rx(dir)</text> liest dann das Empfangsregister mit der aus Kapitel <ref labelref="LABEL:sec:RS232"/> bekannten Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_get_string(str_rx, dir)</text> aus und schreibt den empfangenen String in die Variable <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">str_rx</text>(Codelisting <ref labelref="LABEL:lst:rs232empfangstepper"/>, Zeile 7). In einer <text backgroundcolor="#D9D9FF">if-Abfrage</text> wird entschieden von welcher Schnittstelle der empfangene Befehl kam. Da <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">D_Stepper</text> übergeben wurde, wird der if-Teil der Abfrage ausgeführt. In dieser wird der empfangene String an die <emph>Auswerte-Funktion</emph> für die Schrittmotorkarte (Codelisting <ref labelref="LABEL:lst:rs232empfangstepper"/>, Zeile 15-45) übergeben.
Durch diesen Teil des Programms ist es nun möglich Antworten der Schrittmotorkarte zu empfangen, in dem String <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">str_rx</text> zu speichern und an die Auswerte-Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">switch_Stepper(str_rx)</text> zu übergeben.</p>
        </para>
        <listing class="language_C" refnum="8" xml:id="LST8" labels="LABEL:lst:rs232empfangstepper">
          <toccaption><tag>8 </tag>RS-232 Empfang</toccaption>
          <caption><tag>Listing 8: </tag>RS-232 Empfang</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>((UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1))){<text class="lstspace">                </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Stepper<text class="lstspace"> </text>Polling</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>LED_PORT<text class="lstspace"> </text>&amp;=<text class="lstspace"> </text>(<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED3<text class="lstspace"> </text>);<text class="lstspace">          </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">LED<text class="lstspace"> </text>einschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_rx(D_Stepper);<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Register<text class="lstspace"> </text>auslesen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>Empfangsregister<text class="lstspace"> </text>auslesen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>uart_rx<text class="lstspace">                                </text>(<text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>dir)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_get_string(str_rx,<text class="lstspace"> </text>dir);<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>aus<text class="lstspace"> </text>Empfangsregister<text class="lstspace"> </text>auslesen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(dir<text class="lstspace"> </text>==<text class="lstspace"> </text>D_Stepper)<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Empfangsregister<text class="lstspace"> </text>Stepper</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>switch_Stepper(str_rx);<text class="lstspace">     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzungsfunktion<text class="lstspace"> </text>fuer<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>aufrufen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">else</text>{<text class="lstspace">                               </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Empfangsregister<text class="lstspace"> </text>RapidForm</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Wird<text class="lstspace"> </text>spaeter<text class="lstspace"> </text>erklaert</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
      </subsection>
      <subsection refnum="5.3.3" xml:id="Ch5.S3.SS3" labels="LABEL:sec:Auswerten_SM">
        <title><tag>5.3.3 </tag>Antworten auswerten</title>
        <para xml:id="Ch5.S3.SS3.p1">
          <p>Die Funktion zum Auswerten empfangener Strings spielt eine zentrale Rolle im Projekt. Diese Funktion ermöglicht es, ankommende Strings im Mikrocontroller gegen die bekannten Antworten zu prüfen und eine entsprechende Reaktion auszuführen.<break/>In der Auswerte-Funktion wird der übergebene String mittels der Funktion<break/><text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">FindStringInArray(str_rx, pOptions, length)</text>(Codelisting <ref labelref="LABEL:lst:FindString"/>) gegen ein <text backgroundcolor="#D9D9FF">Array</text> (Codelisting <ref labelref="LABEL:lst:switchStepper"/>, Zeile 3) mit bekannten Befehlen geprüft. Ist der String in diesem Array vorhanden, wird die Position des Strings im Array zurückgegeben, ansonsten wird ”99” zurückgegeben. In einer anschließenden <text backgroundcolor="#D9D9FF">switch/case-Struktur</text> wird dann der Position im Array ein bestimmtes Verhalten des Mikrocontrollers zugeordnet. Wird beispielsweise der String <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">#</text> empfangen, wird Position <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">0</text> zurück gegeben und auf dem LC-Display wird <emph>Erfolgreich</emph> ausgegeben.<break/>Durch diese Funktion kann nun auf Strings reagiert werden und eine entsprechende Reaktion seitens des Mikrocontrollers erfolgen.
<!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 100 **** --></p>
        </para>
        <listing class="language_Java" refnum="9" xml:id="LST9" labels="LABEL:lst:FindString">
          <toccaption><tag>9 </tag>FindStringInArray()</toccaption>
          <caption><tag>Listing 9: </tag>FindStringInArray()</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace">        </text>FindStringInArray<text class="lstspace">        </text>(<text class="lstkeywords" color="#FF0000">const</text><text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text>*<text class="lstspace"> </text>pInput,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">const</text><text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text>*<text class="lstspace"> </text>pOptions[],<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>cmp_length)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>n<text class="lstspace"> </text>=<text class="lstspace"> </text>-1;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(pOptions[++n])<text class="lstspace"> </text>{<text class="lstspace">       </text>//<text color="#008000">Array<text class="lstspace"> </text>durchlaufen<text class="lstspace"> </text>bis<text class="lstspace"> </text>0<text class="lstspace"> </text>terminiert</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>//<text color="#008000">Wenn<text class="lstspace"> </text>pInput<text class="lstspace"> </text>==<text class="lstspace"> </text>pOptions<text class="lstspace"> </text>dann<text class="lstspace"> </text>gib<text class="lstspace"> </text>Array<text class="lstspace"> </text>Position<text class="lstspace"> </text>zurueck</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(!strncmp(pInput,<text class="lstspace"> </text>pOptions[n],<text class="lstspace"> </text>cmp_length))<text class="lstspace">    </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>n;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>99;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Wenn<text class="lstspace"> </text>keine<text class="lstspace"> </text>uebereinstimmung,<text class="lstspace"> </text>gib<text class="lstspace"> </text>99<text class="lstspace"> </text>zurueck</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <listing class="language_Java" refnum="10" xml:id="LST10" labels="LABEL:lst:switchStepper">
          <toccaption><tag>10 </tag>switchStepper()</toccaption>
          <caption><tag>Listing 10: </tag>switchStepper()</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzung<text class="lstspace"> </text>Schrittmotorkarte</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>switch_Stepper<text class="lstspace">                </text>(<text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>str_rx)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">const</text><text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text>*<text class="lstspace"> </text>pOptions[]<text class="lstspace"> </text>=<text class="lstspace"> </text>{<text class="lstspace">       </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Array<text class="lstspace"> </text>mit<text class="lstspace"> </text>bekannten<text class="lstspace"> </text>Befehlen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">#</text>”,<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">0<text class="lstspace"> </text>-<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Karte<text class="lstspace"> </text>hat<text class="lstspace"> </text>Befehl<text class="lstspace"> </text>erkannt</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">E</text>”,<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">1<text class="lstspace"> </text>-<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Karte<text class="lstspace"> </text>meldet<text class="lstspace"> </text>Error</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">!CLS</text>”,<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">2<text class="lstspace"> </text>-<text class="lstspace"> </text>Clear<text class="lstspace"> </text>Screen<text class="lstspace"> </text>(Debugging)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">Test</text>”,<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Test<text class="lstspace"> </text>(Debugging)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>0<text class="lstspace"> </text>};</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">switch</text><text class="lstspace"> </text>(FindStringInArray(str_rx,<text class="lstspace"> </text>pOptions,<text class="lstspace"> </text>1))<text class="lstspace"> </text>{<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>gegen<text class="lstspace"> </text>bekannte<text class="lstspace"> </text>Antworten<text class="lstspace"> </text>pruefen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>0:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">0<text class="lstspace"> </text>-<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Karte<text class="lstspace"> </text>hat<text class="lstspace"> </text>Befehl<text class="lstspace"> </text>erkannt</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Erfolgreich\n</text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>1:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">1<text class="lstspace"> </text>-<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Karte<text class="lstspace"> </text>meldet<text class="lstspace"> </text>Error</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">14</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Error\n</text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">15</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_put_string(”<text color="#000000">1\r\n</text>”,<text class="lstspace"> </text>D_RapidForm);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">16</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">17</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>2:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">2<text class="lstspace"> </text>-<text class="lstspace"> </text>Clear<text class="lstspace"> </text>Screen<text class="lstspace"> </text>(Debugging)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">18</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_clrscr();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">19</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">20</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>3:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Test<text class="lstspace"> </text>(Debugging)</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">21</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Test<text class="lstspace"> </text>bestanden\n</text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">22</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">23</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">default</text>:</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">24</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>ms_spin(10);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">25</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">26</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
      </subsection>
    </section>
    <section refnum="5.4" xml:id="Ch5.S4" labels="LABEL:sec:Verbesserung_Hardware">
      <title><tag>5.4 </tag>Verbesserungen an der vorhandenen Hardware</title>
      <subsection refnum="5.4.1" xml:id="Ch5.S4.SS1" labels="LABEL:sec:Netzteil">
        <title><tag>5.4.1 </tag>Netzteil</title>
        <para xml:id="Ch5.S4.SS1.p1">
          <p>Ziel dieses Arbeitsschrittes war es, die festen Lötverbindungen zwischen dem PC-Netzteil und den einzelnen Karteneinschüben im 19”-Rack durch Steckverbindungen zu ersetzen und dadurch leicht erweiterbar zu machen.<break/>Die festen Lötverbindungen am Einschub für die Schrittmotorkarte wurden durch Standard PC-Netzteil Stecker ersetzt. <!-- %Die Mikrocontroller-Platine wird mit \emph{5V} gespeist. -->Die <text backgroundcolor="#D9D9FF">Logikbausteine</text> der Schrittmotorkarte werden mit <emph>5V</emph> gespeist. Die Schrittmotorkarte wird zusätzlich mit <emph>12V</emph> für den Schrittmotor gespeist. Der Stecker lässt sich nun einfach mit einer Buchse des Standard PC-Netzteils verbinden und es ist nicht mehr Notwendig zu löten wenn das Netzteil ausgebaut wird. Mittels eines Y-Kabels(siehe Abbildung <ref labelref="LABEL:fig:Y-Kabel"/>) können nun leicht weitere Buchsen hinzugefügt werden.<break/>Dadurch kann das Netzteil nun einfach ein- und ausgebaut werden, bzw. das System leicht um neue Einschubkarten erweitert werden.</p>
        </para>
        <figure frefnum="Figure 5.1" placement="h" refnum="5.1" xml:id="Ch5.F1" labels="LABEL:fig:Y-Kabel">
          <graphics graphic="Y-Kabel.jpg" options="width=100.0pt" xml:id="Ch5.F1.g1" class="centering"/>
          <toccaption class="centering"><tag>5.1 </tag>Stromverbinder - Y-Kabel<cite>(<bibref bibrefs="kosatec" separator=";" show="Number" yyseparator=","/>)</cite></toccaption>
          <caption class="centering"><tag>Figure 5.1: </tag>Stromverbinder - Y-Kabel<cite>(<bibref bibrefs="kosatec" separator=";" show="Number" yyseparator=","/>)</cite></caption>
        </figure>
      </subsection>
      <subsection refnum="5.4.2" xml:id="Ch5.S4.SS2">
        <title><tag>5.4.2 </tag>Zweite Schrittmotorkarte</title>
        <para xml:id="Ch5.S4.SS2.p1">
          <p>Zu Anfang war nur eine Schrittmotorkarte für die Rotation des Drehtisches vorbereitet. Mit einem zweiten Schrittmotor konnte der Tisch in der Höhe verstellt werden. Für diesen fehlte jedoch noch eine zweite Schrittmotorkarte. Diese musste noch vorbereitet und mit der Ersten verbunden werden.<break/>Dazu wurde, wie in Kapitel <ref labelref="LABEL:sec:Netzteil"/> beschrieben, ein weiterer Einschubplatz für die Schrittmotorkarte vorbereitet. Die Karte wurde mit einer Frontblende versehen und auf dieser eine Buchse für die Motorverkabelung und je eine Buchse und einen Stecker für die seriellen Schnittstellen verbaut. Diese wurden mit den entsprechenden Anschlüssen auf der Schrittmotorkarte verlötet. Die Karte wird in den Einschubplatz geschoben und mit einem seriellen Kabel als <text backgroundcolor="#D9D9FF">Daisy-Chain</text> mit der ersten Schrittmotorkarte verbunden. Dadurch kann die zweite Schrittmotorkarte über die Erste angesteuert werden.<break/>Somit steht eine baugleiche Schrittmotorkarte zur Verfügung. Diese kann nun den Schrittmotor für die Höhenverstellung ansteuern. Befehle an diese Schrittmotorkarte werden an die erste Karte geschickt, jedoch mit dem Prefix <emph>2</emph>. Dieser weist die erste Karte an, den Befehl an die zweite Karte weiter zu senden. So kann das System um weitere Karten erweitert werden.</p>
        </para>
        <!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 125 **** -->
      </subsection>
      <subsection refnum="5.4.3" xml:id="Ch5.S4.SS3">
        <title><tag>5.4.3 </tag>Motor- und Endschalterverkabelung</title>
        <para xml:id="Ch5.S4.SS3.p1">
          <p>Zwischen der zweiten Schrittmotorkarte und dem zugehörigen Schrittmotor, der für die Höhenverstellung zuständig ist, war noch kein Kabel vorhanden. Dieses musste noch gefertigt und um 3 Leitungen für die Endschalter erweitert werden.<break/>Dafür wurde in der Werkstatt des RheinAhrCampus Remagen ein 7 adriges Kabel (siehe Abbildung <ref labelref="LABEL:fig:Motorverkabelung"/>) besorgt und die passenden Endstecker bestellt. Die Belegung wurde gleich zum Kabel für den ersten Schrittmotor gewählt, jedoch um die 3 Adern für die beiden Endschalter erweitert. Tabelle <ref labelref="LABEL:tab:Motorverkabelung"/> gibt die Belegung des Kabels wieder.<break/>Somit stand ein Kabel zur Verfügung mit dem sowohl der Schrittmotor gesteuert, als auch der Status der Endschalter an die Schrittmotorkarte übermittelt werden konnte.</p>
        </para>
        <figure frefnum="Figure 5.2" placement="h" refnum="5.2" xml:id="Ch5.F2" labels="LABEL:fig:Motorverkabelung">
          <graphics graphic="Kabel.pdf" options="width=433.62pt" xml:id="Ch5.F2.g1" class="centering"/>
          <toccaption class="centering"><tag>5.2 </tag>Motor- und Endschalterverkabelung</toccaption>
          <caption class="centering"><tag>Figure 5.2: </tag>Motor- und Endschalterverkabelung</caption>
        </figure>
        <table frefnum="Table 6.1" refnum="6.1" xml:id="Ch6.T1" labels="LABEL:tab:Motorverkabelung">
          <caption><tag>Table 6.1: </tag>Fuses</caption>
          <toccaption><tag>6.1 </tag>Fuses</toccaption>
          <tabular>
            <tr>
              <td align="center" border="l r t">1</td>
              <td align="left" border="r t">Phase A</td>
            </tr>
            <tr>
              <td align="center" border="l r t">2</td>
              <td align="left" border="r t">Phase B</td>
            </tr>
            <tr>
              <td align="center" border="l r t">3</td>
              <td align="left" border="r t">Phase C</td>
            </tr>
            <tr>
              <td align="center" border="l r t">4</td>
              <td align="left" border="r t">Phase D</td>
            </tr>
            <tr>
              <td align="center" border="l r t">5</td>
              <td align="left" border="r t">Endschalter oben</td>
            </tr>
            <tr>
              <td align="center" border="l r t">6</td>
              <td align="left" border="r t">Endschalter unten</td>
            </tr>
            <tr>
              <td align="center" border="b l r t">7</td>
              <td align="left" border="b r t">Endschalter Masse</td>
            </tr>
          </tabular>
        </table>
      </subsection>
      <subsection refnum="5.4.4" xml:id="Ch5.S4.SS4">
        <title><tag>5.4.4 </tag>Endschalter</title>
        <para xml:id="Ch5.S4.SS4.p1">
          <p>Nun sollen die vorgegeben induktiven Endschalter mit der Schrittmotorkarte und dem Mikrocontroller zu verbinden. Dadurch soll gewährleistet werden, dass der Drehtisch nicht über den Arbeitsbereich hinaus bewegt werden kann. Zusätzlich soll das Erreichen der Endpositionen auf dem LC-Display angezeigt werden.<break/>Da die Schrittmotorkarte nur mechanische Endschalter unterstützt, ließen sich die induktiven Endschalter nicht ohne weiteres nutzen. Um die induktiven Endschalter nutzen zu können, musste die Spannung über einen Spannungsteiler heruntergesetzt werden und die standardmäßigen Eingänge für die mechanischen Endschalter umgangen werden. Die induktiven Endschalter werden direkt an den Optokoppler angeschlossen, welcher für die mechanischen Endschalter zuständig ist. Dadurch wurden die Signale der Endschalter für die Schrittmotorkarte nutzbar.</p>
        </para>
        <figure frefnum="Figure 5.3" placement="h" refnum="5.3" xml:id="Ch5.F3" labels="LABEL:fig:Endschalterverkabelung">
          <graphics graphic="Endschalter.pdf" xml:id="Ch5.F3.g1" class="centering"/>
          <toccaption class="centering"><tag>5.3 </tag>Endschalterverkabelung</toccaption>
          <caption class="centering"><tag>Figure 5.3: </tag>Endschalterverkabelung</caption>
        </figure>
        <para xml:id="Ch5.S4.SS4.p2">
          <p>Ein weiteres Problem bestand darin, dass, wenn der Tisch sich bereits in der Endposition befand, die Endschalter noch nicht aktiviert wurden. Dies lag daran, dass der Metallstutzen, der die Endschalter auslösen sollte, sich nicht im Schaltbereich der induktiven Schalter befand. Zur Abhilfe wurde ein längerer Metallstutzen von der Werkstatt des RheinAhrCampus angefertigt.<break/>Wenn der Tisch sich in der Endposition befindet, soll dies auch auf dem LC-Display angezeigt werden. Die Signale der Endschalter liegen auf der Rückseite der Schrittmotorkarte am Verbindungsstecker an. Um die Signale dem Mikrocontroller zugänglich zu machen wurde eine Brücke zwischen den Verbindungssteckern der Schrittmotorkarte und der Mikrocontroller-Platine gelötet. Auf der Mikrocontroller-Platine sind diese beiden Pins mit je einem Pin des Mikrocontrollers verbunden. Diese beiden Pins werden im Mikrocontroller als <text backgroundcolor="#D9D9FF">Interrupts</text> definiert. Die <text backgroundcolor="#D9D9FF">Interrupt-Service-Routine</text> zum Anzeigen der Nachricht auf dem LC-Display wird in Kapitel <ref labelref="LABEL:sec:Endschalter_SW"/> beschrieben.<break/>Da die Signale der Endschalter nun an der Schrittmotorkarte anliegen, stoppt diese den Motor wenn eine der Endschalterpositionen erreicht wird. Zusätzlich liegen die Signale am Mikrocontroller an. Dieser gibt dadurch auf dem Display die Meldung <emph>Endschalterposition erreicht!</emph> aus.</p>
        </para>
      </subsection>
      <subsection refnum="5.4.5" xml:id="Ch5.S4.SS5">
        <title><tag>5.4.5 </tag>Zweite serielle Schnittstelle</title>
        <para xml:id="Ch5.S4.SS5.p1">
          <p>Das STK500 bietet nur eine serielle Schnittstelle. Um zusätzlich zur Schrittmotorkarte auch mit RapidForm2004 kommunizieren zu können, wird eine zweite RS-232-Schnittstelle benötigt.<break/>Dafür wurde vorerst auf einem Steckbrett eine zweite serielle Schnittstelle nach dem Schaltplan in Abbildung <ref labelref="LABEL:fig:MAX232"/> aufgebaut. Später wird diese Schnittstelle direkt auf der Mikrocontroller-Platine realisiert.
Dadurch ist es möglich mit dem Mikrocontroller über zwei RS-232-Schnittstellen gleichzeitig zu kommunizieren.</p>
        </para>
        <figure frefnum="Figure 5.4" placement="h" refnum="5.4" xml:id="Ch5.F4" labels="LABEL:fig:MAX232">
          <!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 175 **** -->
          <graphics graphic="AVR-RS232" options="width=260.172pt" xml:id="Ch5.F4.g1" class="centering"/>
          <toccaption class="centering"><tag>5.4 </tag>Schaltplan für die zweite serielle Schnittstelle
<cite>(<bibref bibrefs="uc:rs232" separator=";" show="Number" yyseparator=","/>)</cite></toccaption>
          <caption class="centering"><tag>Figure 5.4: </tag>Schaltplan für die zweite serielle Schnittstelle
<cite>(<bibref bibrefs="uc:rs232" separator=";" show="Number" yyseparator=","/>)</cite></caption>
        </figure>
      </subsection>
    </section>
    <section refnum="5.5" xml:id="Ch5.S5" labels="LABEL:sec:Komm_RF2004">
      <title><tag>5.5 </tag>Kommunikation mit RapidForm2004</title>
      <para xml:id="Ch5.S5.p1">
        <p>RapidForm2004 sendet Befehle die für die Drehtischsteuerung bestimmt sind an den Mikrocontroller. Diese sollen dort empfangen, ausgewertet und in verständlicher Form an die Drehtischsteuerung weiter gegeben werden. RapidForm2004 verwendet dabei verschiedene Befehlssätze für verschiedene Schrittmotorsteuerungen. Für jeden dieser Befehlssätze wird eine eigene Auswerte-Funktion geschrieben. Im folgenden Kapitel wird nun das Empfangen der Befehle beschrieben und eine erste Auswertung, die den empfangenen Befehl dem Befehlssatz einer Schrittmotorsteuerung zuordnet.
Nachdem ein Befehl zugeordnet wurde und in der entsprechenden Auswerte-Funktion erkannt wurde, soll ein entsprechender Befehl an die Drehtischsteuerung gesendet und die Antwort der Drehtischsteuerung vom Mikrocontroller ausgewertet werden. Abschließend soll eine entsprechende Antwort an RapidForm2004 zurück gesendet werden. Abbildung <ref labelref="LABEL:fig:Schema_Komm"/> zeigt eine schematische Übersicht dieser Kommunikation.<break/>Die Kommunikation mit RapidForm2004 ist ähnlich zu der mit der Schrittmotorsteuerung. Diese wurde bereits in Kapitel <ref labelref="LABEL:sec:Komm_SM"/> ausführlich beschrieben. Daher wird die Kommunikation hier etwas oberflächlicher behandelt.</p>
      </para>
      <figure frefnum="Figure 5.5" placement="h" refnum="5.5" xml:id="Ch5.F5" labels="LABEL:fig:Schema_Komm">
        <graphics graphic="Schema_Kommunikation" options="width=433.62pt" xml:id="Ch5.F5.g1" class="centering"/>
        <toccaption class="centering"><tag>5.5 </tag>Schema der Kommunikation</toccaption>
        <caption class="centering"><tag>Figure 5.5: </tag>Schema der Kommunikation</caption>
      </figure>
      <subsection refnum="5.5.1" xml:id="Ch5.S5.SS1">
        <title><tag>5.5.1 </tag>Befehle empfangen</title>
        <para xml:id="Ch5.S5.SS1.p1">
          <p>Zuerst sollen nun die Befehle von RapidForm2004 an den Mikrocontroller, gespeichert werden. Anschließend wird die automatische Auswahl des Befehlssatzes beschrieben.<break/>Um anstehende Befehle zu empfangen wird, ähnlich wie in Kapitel <ref labelref="LABEL:sec:Empfangen_Schrittmotor"/>, eine Funktion die ständig das Eingangsregister der ersten seriellen Schnittstelle abfragt verwendet (siehe Codelisting <ref labelref="LABEL:lst:rs232empfangrf"/>). Auch hier wird die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_rx(dir)</text> aufgerufen, jedoch mit dem Parameter <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">D_RapidForm</text>. Der empfangenen String wird auch hier in die Variable <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">str_rx</text> gespeichert. Somit können nun auch Strings von RapidForm2004 empfangen und in der Variablen <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">str_rx</text> gespeichert werden.</p>
        </para>
        <listing class="language_Java" refnum="11" xml:id="LST11" labels="LABEL:lst:rs232empfangrf">
          <toccaption><tag>11 </tag>RS-232 Empfang - RapidForm2004</toccaption>
          <caption><tag>Listing 11: </tag>RS-232 Empfang - RapidForm2004</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>((UCSR0A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC0))){<text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">RapidForm<text class="lstspace"> </text>Polling</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>LED_PORT<text class="lstspace"> </text>&amp;=<text class="lstspace"> </text>(<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED2<text class="lstspace"> </text>);<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">LED<text class="lstspace"> </text>einschalten</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_rx(D_RapidForm);<text class="lstspace">             </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Register<text class="lstspace"> </text>auslesen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <subsubsection refnum="5.5.1.1" xml:id="Ch5.S5.SS1.SSS1" labels="LABEL:sec:AutoProtokoll">
          <title><tag>5.5.1.1 </tag>Automatische Auswahl eines Befehlssatzes</title>
          <!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 200 **** -->
          <para xml:id="Ch5.S5.SS1.SSS1.p1">
            <p>Nun geht es darum, dass der Mikrocontroller anhand eines ersten Befehls der empfangen wird, festlegt, mit welchem Befehlssatz fortan kommuniziert werden soll. Die Kennung für den Befehlssatz wird in einer globalen Variable gespeichert und alle weiteren Befehle werden an die entsprechende Auswerte-Funktion für diesen Befehlssatz übergeben.<break/>In der Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">uart_rx(dir)</text>(Codelisting <ref labelref="LABEL:lst:uartrx"/>) wird nun in der ersten <emph>if-Abfrage</emph> entschieden, von welcher Schnittstelle der empfangene Befehl kam. Diese verzweigt nun, da <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">D_RapidForm</text> übergeben wurde, in den else-Teil. In diesem wird mit mehreren <emph>if-Abfragen</emph> überprüft, ob bereits der Befehlssatz für einen bestimmten Motor ausgewählt wurde. Ist dies nicht der Fall, wird der empfangende String an die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">switch_Motor(str_rx)</text>(Codelisting <ref labelref="LABEL:lst:switchMotor"/>) übergeben. Diese prüfte mit der aus Kapitel <ref labelref="LABEL:sec:Auswerten_SM"/> bekannten Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">FindStringInArray(str_rx, pOptions, 3)</text>, den angekommenen String gegen die Initialisierungsbefehle der einzelnen Befehlssätze. Die Initialisierungsbefehle sind die ersten Befehle die RapidForm2004 an eine Schrittmotorsteuerung sendet um zu prüfen ob diese vorhanden ist. In diesem ersten Schritt wird der String nur zur Identifizierung des von RapidForm2004 verwendeten Befehlssatzes verwendet. Das Antworten auf einen String wird erst in den nachfolgenden Kapiteln beschrieben. Die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">switch_Motor(str_rx)</text> gibt einen numerischen Wert zurück. Jede Zahl entspricht dabei dem Befehlssatz für eine Schrittmotorsteuerung. Die Zahlenwerte werden dabei mittels Makro-Definitionen (Codelisting <ref labelref="LABEL:lst:switchMotor"/> Zeile 1-6) durch lesbare Text-Variablen ersetzt. Dies erhöhte die Lesbarkeit und das Verständnis. War dieser Schritt erfolgreich, wird in den folgenden if-Abfragen die richtige Auswerte-Funktion aufgerufen. Konnte die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">switch_Motor(str_rx)</text> den empfangen Befehl nicht zuordnen, gibt sie <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">M_UNK</text> zurück und es wird auf dem Display <emph>Unbekannter Motor!</emph> ausgegeben.<break/>Somit ist es möglich Befehle von RapidForm2004 zu empfangen und an die richtige Auswerte-Funktionen zu übergeben. Zusätzlich wird die Programmierung dadurch wesentlich robuster, da unbekannte Befehle ignoriert werden.<break/>Der Nachteil dieses Vorgehens besteht darin, dass für ein wechseln des Befehlssatzes der Mikrocontroller neu gestartet werden muss. Ein Beheben dieses Nachteils wäre nicht ohne weiteres möglich gewesen.</p>
          </para>
          <listing class="language_C" refnum="12" xml:id="LST12" labels="LABEL:lst:uartrx">
            <toccaption><tag>12 </tag>Funktion: uart rx()</toccaption>
            <caption><tag>Listing 12: </tag>Funktion: uart rx()</caption>
            <tabular>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">1</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">UART<text class="lstspace"> </text>Empfangsregister<text class="lstspace"> </text>auslesen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">2</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>uart_rx<text class="lstspace">                                </text>(<text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>dir)<text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">3</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_get_string(str_rx,<text class="lstspace"> </text>dir);<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>aus<text class="lstspace"> </text>Empfangsregister<text class="lstspace"> </text>auslesen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">4</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(dir<text class="lstspace"> </text>==<text class="lstspace"> </text>D_Stepper)<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Empfangsregister<text class="lstspace"> </text>Stepper</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">5</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>switch_Stepper(str_rx);<text class="lstspace">             </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersung<text class="lstspace"> </text>Stepper</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">6</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">else</text>{<text class="lstspace">                               </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Empfangsregsiter<text class="lstspace"> </text>RapidForm</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">7</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzungsfunktion<text class="lstspace"> </text>auswaehlen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">8</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(Initialized<text class="lstspace"> </text>==<text class="lstspace"> </text>M_UNK){<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Unbekannter<text class="lstspace"> </text>Initialisierungsbefehl</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">9</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>lcd_puts(”<text color="#000000">Unbekannter<text class="lstspace"> </text>Motor!\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">10</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>Initialized<text class="lstspace"> </text>=<text class="lstspace"> </text>M_NOTI;<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Variable<text class="lstspace"> </text>Initialized<text class="lstspace"> </text>zuruecksetzen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">11</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">12</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(Initialized<text class="lstspace"> </text>==<text class="lstspace"> </text>M_NOTI){<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Befehlssatz<text class="lstspace"> </text>bestimmen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">13</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>Initialized<text class="lstspace"> </text>=<text class="lstspace"> </text>switch_Motor(str_rx);<text class="lstspace"> </text>//<text color="#008000">Automatische<text class="lstspace"> </text>Befehlssatzwahl</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">14</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">15</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(Initialized<text class="lstspace"> </text>==<text class="lstspace"> </text>M_ISEL)<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzung<text class="lstspace"> </text>ISEL</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">16</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>switch_Isel(str_rx);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">17</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(Initialized<text class="lstspace"> </text>==<text class="lstspace"> </text>M_CSG)<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzung<text class="lstspace"> </text>CSG</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">18</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>switch_csg(str_rx);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">19</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(Initialized<text class="lstspace"> </text>==<text class="lstspace"> </text>M_ZETA)<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzung<text class="lstspace"> </text>Zeta</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">20</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>switch_Zeta(str_rx);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">21</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text>(Initialized<text class="lstspace"> </text>==<text class="lstspace"> </text>M_TERMINAL)<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzung<text class="lstspace"> </text>Terminal</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">22</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>switch_Terminal(str_rx);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">23</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">24</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">}</text>
                </td>
              </tr>
            </tabular>
          </listing>
          <listing class="language_C" refnum="13" xml:id="LST13" labels="LABEL:lst:switchMotor">
            <toccaption><tag>13 </tag>Funktion: switch Motor()</toccaption>
            <caption><tag>Listing 13: </tag>Funktion: switch Motor()</caption>
            <tabular>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">1</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>M_UNK<text class="lstspace">           </text>-2</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">2</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>M_NOTI<text class="lstspace">              </text>-1</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">3</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>M_ISEL<text class="lstspace">           </text>0</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">4</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>M_CSG<text class="lstspace">               </text>1</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">5</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>M_ZETA<text class="lstspace">           </text>2</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">6</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">define<text class="lstspace"> </text>M_TERMINAL<text class="lstspace">       </text>3</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">7</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace">        </text>Initialized<text class="lstspace"> </text>=<text class="lstspace"> </text>M_NOTI;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">8</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">Automatische<text class="lstspace"> </text>Befehlssatzwahl</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">9</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace">        </text>switch_Motor<text class="lstspace">                </text>(<text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>str_rx)<text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">10</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">const</text><text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text>*<text class="lstspace"> </text>pOptions[]<text class="lstspace"> </text>=<text class="lstspace"> </text>{<text class="lstspace">       </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Array<text class="lstspace"> </text>mit<text class="lstspace"> </text>Initialisierungsbefehlen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">11</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">@01</text>”,<text class="lstspace">          </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">0<text class="lstspace"> </text>-<text class="lstspace"> </text>Isel</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">12</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">Q:</text>”,<text class="lstspace">           </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">1<text class="lstspace"> </text>-<text class="lstspace"> </text>CSG</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">13</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">ECHO0</text>”,<text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">2<text class="lstspace"> </text>-<text class="lstspace"> </text>Zeta</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">14</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">!Terminal</text>”,<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Terminal<text class="lstspace"> </text>ansteuerung!</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">15</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>0<text class="lstspace"> </text>};</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">16</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Ankommenden<text class="lstspace"> </text>String<text class="lstspace"> </text>gegen<text class="lstspace"> </text>Array<text class="lstspace"> </text>pruefen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">17</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">switch</text><text class="lstspace"> </text>(FindStringInArray(str_rx,<text class="lstspace"> </text>pOptions,<text class="lstspace"> </text>3))<text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">18</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>0:<text class="lstspace">             </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">0<text class="lstspace"> </text>-<text class="lstspace"> </text>ISEL</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">19</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>M_ISEL;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">20</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">21</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>1:<text class="lstspace">             </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">1<text class="lstspace"> </text>-<text class="lstspace"> </text>CSG</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">22</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>M_CSG;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">23</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">24</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>2:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">2<text class="lstspace"> </text>-<text class="lstspace"> </text>Zeta</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">25</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>M_ZETA;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">26</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">27</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>3:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Terminal<text class="lstspace"> </text>ansteuerung</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">28</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>M_TERMINAL;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">29</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">30</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">default</text>:</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">31</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">return</text><text class="lstspace"> </text>M_UNK;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">32</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">33</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote">}</text>
                </td>
              </tr>
            </tabular>
          </listing>
        </subsubsection>
      </subsection>
    </section>
    <section refnum="5.6" xml:id="Ch5.S6" labels="LABEL:sec:Auswerten_RF">
      <title><tag>5.6 </tag>Auswerte-Funktionen</title>
      <para xml:id="Ch5.S6.p1">
        <p>Die Auswerte-Funktionen sind das Herzstück des Programms. Es geht darum für jedes Protokoll eine eigene Auswerte-Funktion zu schreiben. Diese sollen die von RapidForm2004 kommenden Strings verstehen können und in einen, für die vorhandene Schrittmotorkarte, verständlichen Befehl übersetzen können. Die Funktionen sollen weiterhin prüfen, ob der Befehl von der Schrittmotorkarte erkannt wurde und den Status der Schrittmotorkarte zurück an RapidForm2004 melden.<break/>Alle bisherigen Arbeitsschritte hatten zum Ziel, die Kommunikation zwischen RapidForm2004 und der ersten Schrittmotorkarte zu ermöglichen. Nun fehlt nur noch der Teil des Programms der die ankommenden Befehle auswertet und in verständlicher Form an die Schrittmotorkarte weitergibt.
Im folgenden Kapitel wird dieser Ablauf nun exemplarisch für den Befehlssatz eines Isel-Motors erklärt.</p>
      </para>
      <subsection refnum="5.6.1" xml:id="Ch5.S6.SS1">
        <title><tag>5.6.1 </tag>Auswerte-Funktion für Isel-Motoren</title>
        <para xml:id="Ch5.S6.SS1.p1">
          <p>Wird der Befehl <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">@01</text> empfangen, übergibt die in Kapitel <ref labelref="LABEL:sec:AutoProtokoll"/> beschriebene Funktion, den String an die Auswerte-Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">switch_Isel(str_rx)</text>. Der Ablauf dieser Funktion ist ähnlich aufgebaut wie bei der Kommunikation mit der Schrittmotorkarte (Kapitel <ref labelref="LABEL:sec:Komm_SM"/>) und bei der automatischen Auswahl des Befehlssatzes (Kapitel <ref labelref="LABEL:sec:AutoProtokoll"/>. In der Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">switch_Isel(str_rx)</text> sind in dem Array <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">pOptions</text> alle benötigten Befehle des Isel-Befehlssatzes hinterlegt. Mit der aus Kapitel <ref labelref="LABEL:sec:Auswerten_SM"/> bekannten Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">FindStringInArray(str_rx, pOptions)</text> wird  <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">str_rx</text> gegen diese Befehle geprüft. Wird der Befehl im Array gefunden gibt die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">FindStringInArray()</text> die Position des Strings im Array zurück. Mittels einer <text backgroundcolor="#D9D9FF">switch-case-Struktur</text> lässt sich nun so für jeden Befehl ein entsprechender Ablauf ausführen. Die einzelnen Abläufe werden übersichtlich in den folgenden Kapiteln beschrieben.</p>
        </para>
        <listing class="language_C" refnum="14" xml:id="LST14" labels="LABEL:lst:switch_Isel">
          <toccaption><tag>14 </tag>Übersetzungs Logik für einen Isel-Motor</toccaption>
          <caption><tag>Listing 14: </tag>Übersetzungs Logik für einen Isel-Motor</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace" color="#008000"> </text><text color="#008000">Uebersetzung<text class="lstspace"> </text>Isel</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>switch_Isel<text class="lstspace">                        </text>(<text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>str_rx)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">const</text><text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text>*<text class="lstspace"> </text>pOptions[]<text class="lstspace"> </text>=<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">XXXXXXX</text>”,<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">0<text class="lstspace"> </text>-<text class="lstspace"> </text>Reserve</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">!CLS</text>”,<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">1<text class="lstspace"> </text>-<text class="lstspace"> </text>LC-Display<text class="lstspace"> </text>loeschen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">Test</text>”,<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">2<text class="lstspace"> </text>-<text class="lstspace"> </text>Test</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">@01</text>”,<text class="lstspace">          </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Achse<text class="lstspace"> </text>auswaehlen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">@0R</text>”,<text class="lstspace">          </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">4<text class="lstspace"> </text>-<text class="lstspace"> </text>Status<text class="lstspace"> </text>abfrage</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>”<text color="#000000">@0M</text>”,<text class="lstspace">          </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">5<text class="lstspace"> </text>-<text class="lstspace"> </text>Gehe<text class="lstspace"> </text>zu<text class="lstspace"> </text>Position</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>0<text class="lstspace"> </text>};</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">switch</text><text class="lstspace"> </text>(FindStringInArray(str_rx,<text class="lstspace"> </text>pOptions,<text class="lstspace"> </text>3))</text>
              </td>
            </tr>
          </tabular>
        </listing>
        <subsubsection refnum="5.6.1.1" xml:id="Ch5.S6.SS1.SSS1">
          <title><tag>5.6.1.1 </tag>Initialisierung</title>
          <para xml:id="Ch5.S6.SS1.SSS1.p1">
            <p>Für den String <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">@01</text> wird <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">case 3</text> ausgeführt. Dieser Codeblock zeigt die Meldung <emph>Init</emph> auf dem Display an und sendet den erwarteten Befehl an RapidForm2004.
<!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 225 **** --></p>
          </para>
          <listing class="language_C" refnum="15" xml:id="LST15" labels="LABEL:lst:switch_Isel_Init">
            <toccaption><tag>15 </tag>case 3: Initialisierung</toccaption>
            <caption><tag>Listing 15: </tag>case 3: Initialisierung</caption>
            <tabular>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">1</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>3:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">3<text class="lstspace"> </text>-<text class="lstspace"> </text>Achse<text class="lstspace"> </text>auswaehlen<text class="lstspace"> </text>(Initialisierung)</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">2</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(10);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">3</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text color="#000000">Init</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">4</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_put_string(”<text color="#000000">0\r\n</text>”,<text class="lstspace"> </text>D_RapidForm);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">5</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
            </tabular>
          </listing>
        </subsubsection>
        <subsubsection refnum="5.6.1.2" xml:id="Ch5.S6.SS1.SSS2">
          <title><tag>5.6.1.2 </tag>Statusabfrage</title>
          <para xml:id="Ch5.S6.SS1.SSS2.p1">
            <p>Wird der String <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">@0R</text> empfangen, wird der Codeblock <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">case 4</text> ausgeführt. Auf dem LC-Display wird <emph>Satusabfrage:</emph> ausgegeben. Danach wird der entsprechende Befehl für eine Statusabfrage an die Schrittmotorkarte gesendet. Nach einer kurzen Pause von 50ms, um die Verarbeitung auf der Schrittmotorkarte zu gewährleisten, wird mit einer if-Anweisung geprüft ob sich Daten im Schrittmotorkarten-Empfangsregister befinden. Sprich, die Schrittmotorkarte reagiert hat. Ist dies der Fall, wird der Ablauf, bekannt aus Kapitel <ref labelref="LABEL:sec:Komm_SM"/>, durchlaufen. Während diesem Ablauf wird die entsprechende Antwort der Schrittmotorkarte auf dem LC-Display ausgegeben. In einer weiteren if-Anweisung wird überprüft ob der angekommene String erfolgreich war. Wenn ja, wird dies an RapidForm2004 gemeldet. Andernfalls zeigt das Display <emph>Fehlgeschlagen</emph> an und sendet eine <emph>1</emph> an RapidForm2004.</p>
          </para>
          <listing class="language_C" refnum="16" xml:id="LST16" labels="LABEL:lst:switch_Isel_Status">
            <toccaption><tag>16 </tag>case 4: Statusabfrage</toccaption>
            <caption><tag>Listing 16: </tag>case 4: Statusabfrage</caption>
            <tabular>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">1</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>4:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">4<text class="lstspace"> </text>-<text class="lstspace"> </text>Status<text class="lstspace"> </text>abfrage</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">2</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text color="#000000">Statusabfrage:<text class="lstspace">     </text>\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">3</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_put_string(”<text color="#000000">A\n</text>”,<text class="lstspace"> </text>D_Stepper);<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Statusabfrage<text class="lstspace"> </text>an<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>senden</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">4</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(50);<text class="lstspace">                                   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Verarbeitungszeit<text class="lstspace"> </text>gewaehren</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">5</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>((UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1)))<text class="lstspace">                 </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Wenn<text class="lstspace"> </text>ein<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>empfangen<text class="lstspace"> </text>wurde</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">6</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_rx(D_Stepper);<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Zeichen<text class="lstspace"> </text>auslesen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">7</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(!strcmp(str_rx,”<text color="#000000">0#</text>”))<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Empfangenes<text class="lstspace"> </text>Zeichen<text class="lstspace"> </text>ueberpruefen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">8</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_put_string(”<text color="#000000">0\r\n</text>”,<text class="lstspace"> </text>D_RapidForm);<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Antwort<text class="lstspace"> </text>Ok<text class="lstspace"> </text>an<text class="lstspace"> </text>RF<text class="lstspace"> </text>melden</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">9</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">else</text><text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">10</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Fehlgeschlagen<text class="lstspace">     </text>\n</text>”);<text class="lstspace">         </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Fehler<text class="lstspace"> </text>auf<text class="lstspace"> </text>Display<text class="lstspace"> </text>anzeigen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">11</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_put_string(”<text color="#000000">1\r\n</text>”,<text class="lstspace"> </text>D_RapidForm);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Fehler<text class="lstspace"> </text>an<text class="lstspace"> </text>RapidForm<text class="lstspace"> </text>melden</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">12</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">13</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
            </tabular>
          </listing>
        </subsubsection>
        <subsubsection refnum="5.6.1.3" xml:id="Ch5.S6.SS1.SSS3">
          <title><tag>5.6.1.3 </tag>Rotation</title>
          <para xml:id="Ch5.S6.SS1.SSS3.p1">
            <p>Der Codeblock von <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">case 5</text> ist für die Rotation verantwortlich. Es werden je ein String für die Endposition und für den Winkel mit Stringterminierungszeichen vorbelegt. Diese werden an die Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">String_zerlegen_Isel(str_rx, Position, Winkel)</text> (Codelisting <ref labelref="LABEL:lst:StringzerlegenIsel"/>) übergeben. Dort wird der String in die Bestandteile <emph>Achse</emph>, <emph>Rotationsbefehl</emph>, <emph>Position/Anzahl der Schritte</emph> und <emph>Geschwindigkeit</emph> zerlegt. Von diesen ist nur die Anzahl der Schritte relevant. Da die Anzahl der Schritte für den Schrittmotor angepasst werden muss, wird der String in eine Zahl umgewandelt und mit einem entsprechenden Faktor multipliziert. Zugunsten der Rechenzeit wird nicht exakt gerechnet und die Division im Faktor mit 1024 durchgeführt. Diese wird beim Kompilieren durch eine <text backgroundcolor="#D9D9FF">Bitverschiebung</text> ersetzt. Dies spart mehrere Sekunden Rechenzeit und die Abweichung der Schritte beträgt nur maximal 3 Schritte. Die berechnete Anzahl der Schritte wird anschließend wieder als String gespeichert. Dieser wird dann an den String für den Rotationsbefehl der Schrittmotorkarte angehängt. Der neue String wird auf dem Display ausgegeben und an die Schrittmotorsteuerung gesendet. Die Antwort der Schrittmotorsteuerung wird ausgelesen und anschließend wird in einer <text backgroundcolor="#D9D9FF">while-Schleife</text> so lange der Status des Motors abgefragt bis dieser keine Bewegung mehr meldet. Die Position ist damit erreicht und es wird der erwartete Befehl an RapidForm2004 gesendet.</p>
          </para>
          <listing class="language_C" refnum="17" xml:id="LST17" labels="LABEL:lst:switch_Isel_Rotation">
            <toccaption><tag>17 </tag>case 5: Rotation</toccaption>
            <caption><tag>Listing 17: </tag>case 5: Rotation</caption>
            <tabular>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">1</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">case</text><text class="lstspace"> </text>5:<text class="lstspace">                     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">5<text class="lstspace"> </text>-<text class="lstspace"> </text>Gehe<text class="lstspace"> </text>zu<text class="lstspace"> </text>Position<text class="lstspace"> </text>MX<text class="lstspace"> </text>,<text class="lstspace"> </text>+600</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">2</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(10);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">3</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>Position[33],<text class="lstspace"> </text>Winkel[6];</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">4</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>memset(Position,<text class="lstspace"> </text>’<text color="#000000">\0</text>’,<text class="lstspace"> </text>33);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Strign<text class="lstspace"> </text>0<text class="lstspace"> </text>Terminiert<text class="lstspace"> </text>vorbelegen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">5</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>memset(Winkel,<text class="lstspace"> </text>’<text color="#000000">\0</text>’,<text class="lstspace"> </text>6);<text class="lstspace">    </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>0<text class="lstspace"> </text>Terminiert<text class="lstspace"> </text>vorbelegen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">6</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>String_zerlegen_Isel(str_rx,<text class="lstspace"> </text>Position,<text class="lstspace"> </text>Winkel);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>auswerten</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">7</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>fuer<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>vorbereiten</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">8</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>Move_To[40];</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">9</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>memset(Move_To,<text class="lstspace">  </text>’<text color="#000000">\0</text>’,<text class="lstspace"> </text>40);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">10</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Move_To[0]<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text color="#000000">M</text>’;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">11</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Move_To[1]<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text color="#000000">A</text>’;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">12</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Move_To[2]<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text class="lstspace" color="#000000"> </text>’;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">13</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Move_To[3]<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text color="#000000">\0</text>’;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">14</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>strcat(Move_To,<text class="lstspace"> </text>Position);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">15</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>strcat(Move_To,<text class="lstspace"> </text>”<text color="#000000">\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">16</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text color="#000000">Pos:</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">17</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(Move_To);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">18</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>an<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>senden</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">19</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_put_string(Move_To,<text class="lstspace"> </text>D_Stepper);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">20</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(50);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">21</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>((UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1)))</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">22</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_rx(D_Stepper);<text class="lstspace">     </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Antwort<text class="lstspace"> </text>des<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>auslesen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">23</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">else</text><text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">24</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">break</text>;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Bei<text class="lstspace"> </text>Fehler<text class="lstspace"> </text>abbrechen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">25</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">26</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Status<text class="lstspace"> </text>des<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Abfragen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">27</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_put_string(”<text color="#000000">A\n</text>”,<text class="lstspace"> </text>D_Stepper);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">28</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ms_spin(50);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">29</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Antwort<text class="lstspace"> </text>des<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Abfragen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">30</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>((UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1)))</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">31</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_rx(D_Stepper);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">32</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">else</text><text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">33</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Keine<text class="lstspace"> </text>Bewegung!\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">34</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">35</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">So<text class="lstspace"> </text>lange<text class="lstspace"> </text>der<text class="lstspace"> </text>Stepper<text class="lstspace"> </text>Bewegung<text class="lstspace"> </text>meldet<text class="lstspace"> </text>erneut<text class="lstspace"> </text>Statusabfrage</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">36</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(!strcmp(str_rx,”<text color="#000000">1#</text>”)){</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">37</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Statusabfrage<text class="lstspace"> </text>an<text class="lstspace"> </text>Stepper</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">38</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>uart_put_string(”<text color="#000000">A\n</text>”,<text class="lstspace"> </text>D_Stepper);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">39</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>ms_spin(50);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">40</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Statusabfrage<text class="lstspace"> </text>auslesen<text class="lstspace"> </text>und<text class="lstspace"> </text>auswerten</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">41</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>((UCSR1A<text class="lstspace"> </text>&amp;<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>RXC1))){</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">42</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>uart_rx(D_Stepper);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">43</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>lcd_clrscr();</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">44</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>lcd_puts(”<text color="#000000">Gehe<text class="lstspace"> </text>zu<text class="lstspace"> </text>Winkel:<text class="lstspace"> </text></text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">45</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>lcd_puts(Winkel);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">46</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>lcd_puts(”<text color="#000000">\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">47</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">48</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">else</text><text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">49</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>lcd_puts(”<text color="#000000">Keine<text class="lstspace"> </text>Antwort\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">50</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">51</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>wdt_reset();</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">52</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">53</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text color="#000000">Winkel:<text class="lstspace"> </text></text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">54</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(Winkel);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">55</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”<text class="lstspace" color="#000000"> </text><text color="#000000">Erreicht\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">56</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Bewegung<text class="lstspace"> </text>abgeschlossen<text class="lstspace"> </text>an<text class="lstspace"> </text>RapidForm<text class="lstspace"> </text>melden</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">57</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>uart_put_string(”<text color="#000000">0\r\n</text>”,<text class="lstspace"> </text>D_RapidForm);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">58</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">break</text>;</text>
                </td>
              </tr>
            </tabular>
          </listing>
          <listing class="language_C" refnum="18" xml:id="LST18" labels="LABEL:lst:StringzerlegenIsel">
            <toccaption><tag>18 </tag>Funktion: string zerlegen Isel()</toccaption>
            <caption><tag>Listing 18: </tag>Funktion: string zerlegen Isel()</caption>
            <tabular>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">1</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstkeywords" color="#FF0000">void</text><text class="lstspace">        </text>String_zerlegen_Isel(<text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>str_rx,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>Position,<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>Winkel)<text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">2</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text color="#008000">0M5200,<text class="lstspace"> </text>+600</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">3</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text color="#008000">Achse<text class="lstspace"> </text>M<text class="lstspace"> </text>Position,<text class="lstspace"> </text>+Geschwindigkeit</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">4</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>*<text class="lstspace"> </text>Achse=”<text color="#000000">0</text>”;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">5</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Achse[0]<text class="lstspace"> </text>=<text class="lstspace"> </text>str_rx[1];<text class="lstspace">      </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Achse<text class="lstspace"> </text>setzen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">6</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Achse[1]<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text color="#000000">\0</text>’;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">7</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Ausgeben<text class="lstspace"> </text>welche<text class="lstspace"> </text>Achse<text class="lstspace"> </text>gewaehlt<text class="lstspace"> </text>wurde</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">8</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text>(atoi(Achse)==0){</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">9</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Achse:<text class="lstspace"> </text></text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">10</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(Achse);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">11</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text class="lstspace" color="#000000"> </text><text color="#000000">(Rotation)\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">12</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">13</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">if</text>(atoi(Achse)==1){</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">14</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text color="#000000">Achse:<text class="lstspace"> </text></text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">15</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(Achse);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">16</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>lcd_puts(”<text class="lstspace" color="#000000"> </text><text color="#000000">(Hoehe)<text class="lstspace">   </text>\n</text>”);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">17</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">18</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Anzahl<text class="lstspace"> </text>der<text class="lstspace"> </text>Schritte<text class="lstspace"> </text>aus<text class="lstspace"> </text>dem<text class="lstspace"> </text>String<text class="lstspace"> </text>auslesen</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">19</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">char</text><text class="lstspace"> </text>c;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">20</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">int</text><text class="lstspace"> </text>i<text class="lstspace"> </text>=<text class="lstspace"> </text>0;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">21</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text><text class="lstkeywords" color="#FF0000">do</text><text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">22</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>c<text class="lstspace"> </text>=<text class="lstspace"> </text>str_rx[i<text class="lstspace"> </text>+<text class="lstspace"> </text>3];</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">23</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text><text class="lstkeywords" color="#FF0000">if</text><text class="lstspace"> </text>(c<text class="lstspace"> </text>!=<text class="lstspace"> </text>’<text color="#000000">,</text>’)<text class="lstspace"> </text>{</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">24</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>Position[i]<text class="lstspace"> </text>=<text class="lstspace"> </text>c;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">25</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                        </text>i++;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">26</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">                </text>}</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">27</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>}<text class="lstspace"> </text><text class="lstkeywords" color="#FF0000">while</text><text class="lstspace"> </text>(i<text class="lstspace"> </text>&lt;<text class="lstspace"> </text>20<text class="lstspace"> </text>&amp;&amp;<text class="lstspace"> </text>c<text class="lstspace"> </text>!=<text class="lstspace"> </text>’<text color="#000000">\0</text>’<text class="lstspace"> </text>&amp;&amp;<text class="lstspace"> </text>c<text class="lstspace"> </text>!=<text class="lstspace"> </text>’<text color="#000000">,</text>’);</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">28</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>Position[i]<text class="lstspace"> </text>=<text class="lstspace"> </text>’<text color="#000000">\0</text>’;<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>0<text class="lstspace"> </text>Terminieren</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">29</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>int32_t<text class="lstspace"> </text>z;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">30</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>int32_t<text class="lstspace"> </text>y;</text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">31</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>z<text class="lstspace"> </text>=<text class="lstspace"> </text>atol(Position);<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">String<text class="lstspace"> </text>in<text class="lstspace"> </text>Zahl(long)<text class="lstspace"> </text>umwandeln</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">32</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>y<text class="lstspace"> </text>=<text class="lstspace"> </text>z<text class="lstspace"> </text>/<text class="lstspace"> </text>7200;<text class="lstspace">             </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Berechnung<text class="lstspace"> </text>des<text class="lstspace"> </text>Winkel</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">33</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>z<text class="lstspace"> </text>=<text class="lstspace"> </text>(z<text class="lstspace"> </text>*<text class="lstspace"> </text>71111)<text class="lstspace">  </text>/1024;<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Berechnung<text class="lstspace"> </text>der<text class="lstspace"> </text>Schritte</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">34</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ltoa(y,<text class="lstspace"> </text>Winkel,<text class="lstspace">            </text>10<text class="lstspace"> </text>);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Winekl<text class="lstspace"> </text>in<text class="lstspace"> </text>String<text class="lstspace"> </text>umwandeln</text></text>
                </td>
              </tr>
              <tr>
                <td class="linenumber">
                  <text fontsize="tiny">35</text>
                </td>
                <td>
                  <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>ltoa(z,<text class="lstspace"> </text>Position,<text class="lstspace">    </text>10<text class="lstspace"> </text>);<text class="lstspace"> </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Schritte<text class="lstspace"> </text>in<text class="lstspace"> </text>String<text class="lstspace"> </text>umwandeln</text></text>
                </td>
              </tr>
            </tabular>
          </listing>
        </subsubsection>
      </subsection>
    </section>
    <section refnum="5.7" xml:id="Ch5.S7" labels="LABEL:sec:Platinenlayout">
      <title><tag>5.7 </tag>Platinenlayout und 19”-Einschub</title>
      <para xml:id="Ch5.S7.p1">
        <p>Der Mikrocontroller und seine Peripherie befanden sich noch auf dem STK500. Es soll ein Platinenlayout entwickelt werden, welches den Mikrocontroller und seine Peripherie enthält.<break/>Dazu wird ein Platinenlayout in der Open Source Software KiCad entwickelt. Diese bietet fast alles, was benötigt wird um ein Platinenlayout zu entwickeln. Ein Schaltplaneditor, ein Bauteileditor und ein Layouteditor. Da die Schrittmotorkarten als 19”-Einschübe realisiert sind, wird auch das Platinenlayout für den Mikrocontroller als 19”-Einschub entwickelt. Dazu gehören vor allem der Steckverbinder an der Rückseite der Platine und genügend Platz für die Verschraubung der Blende an der Vorderseite, sowie die Größe der Platine. Die Schaltungen wie sie auf dem STK500 vorhanden sind, werden im Schaltplaneditor von KiCad in den eigenen Schaltplan (siehe Abbildung <ref labelref="LABEL:fig:Schaltplan"/>) übernommen.</p>
      </para>
      <figure frefnum="Figure 5.6" placement="h" refnum="5.6" xml:id="Ch5.F6" labels="LABEL:fig:Schaltplan">
        <graphics graphic="Schaltplan" options="width=433.62pt" xml:id="Ch5.F6.g1" class="centering"/>
        <toccaption class="centering"><tag>5.6 </tag>Schaltplan</toccaption>
        <caption class="centering"><tag>Figure 5.6: </tag>Schaltplan</caption>
        <!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 250 **** -->
      </figure>
      <para xml:id="Ch5.S7.p2">
        <p>Anschließend wird das Layout im Layouteditor entwickelt. Dabei waren mehrere enge Vorgaben einzuhalten. Da in der Werkstatt des RheinAhrCampus keine Platinen mit <text backgroundcolor="#D9D9FF">Durchkontaktierungen</text> hergestellt werden können, sollen <text backgroundcolor="#D9D9FF">Vias</text> vermieden, IC-Sockel, Kondensatoren und Potis nur auf der Unterseite verlötet werden. Abschließend werden die benötigten Verbindungen zwischen den Bauteilen berechnet. Die Aufgabe übernimmt im allgemeinen ein <text backgroundcolor="#D9D9FF">Autorouter</text>. Dies kann nicht in der Software KiCad selbst durchgeführt werden. Diese Funktionalität wird jedoch durch die Java-Web-Anwendung <emph>Freeroute</emph>[<ref labelref="LABEL:sec:V_Software"/>] bereitgestellt. Da der Autorouter die Aufgabe nicht zufriedenstellend lösen konnte, mussten viele Verbindungen nachträglich manuell angelegt werden. Das fertige Layout (siehe Abbildung <ref labelref="LABEL:fig:Platine"/>) wurde von der Werkstatt am RheinAhrCampus gefertigt und anschließend bestückt.</p>
      </para>
      <figure frefnum="Figure 5.7" placement="h" refnum="5.7" xml:id="Ch5.F7" labels="LABEL:fig:Platine">
        <graphics graphic="Translator_white" options="width=433.62pt" xml:id="Ch5.F7.g1" class="centering"/>
        <toccaption class="centering"><tag>5.7 </tag>Platinenlayout</toccaption>
        <caption class="centering"><tag>Figure 5.7: </tag>Platinenlayout</caption>
      </figure>
      <para xml:id="Ch5.S7.p3">
        <p>Über den rückwärtigen Steckverbinder wird die Platine mit der Spannungsversorgung verbunden. Zusätzlich kommen hier auch die Signale der Endschalter an. An der Vorderseite der Platine wird eine Blende verbaut. Auf dieser Blende befinden sich das LC-Display, fünf Taster, 5 LEDs und 2 serielle Schnittstellen. Alle Bauteile sind mittels Flachbandkabel, steckbar, mit der Platine verbunden.<break/>Dadurch sind alle im Projekt verwendeten Komponenten auf einem 19”-Einschub (siehe Abbildung <ref labelref="LABEL:fig:Einschub"/>) vereint.</p>
      </para>
      <figure frefnum="Figure 5.8" placement="h" refnum="5.8" xml:id="Ch5.F8" labels="LABEL:fig:Einschub">
        <graphics graphic="19ZollEinschub" options="width=433.62pt" xml:id="Ch5.F8.g1" class="centering"/>
        <toccaption class="centering"><tag>5.8 </tag>19”-Einschub</toccaption>
        <caption class="centering"><tag>Figure 5.8: </tag>19”-Einschub</caption>
      </figure>
    </section>
  </chapter>
  <chapter frefnum="Chapter 6" refnum="6" xml:id="Ch6">
    <title><tag>Chapter 6 </tag>Probleme und Lösungen</title>
    <toctitle><tag>6 </tag>Probleme und Lösungen</toctitle>
    <section refnum="6.1" xml:id="Ch6.S1">
      <title><tag>6.1 </tag>Entwicklungsumgebungen</title>
      <subsection refnum="6.1.1" xml:id="Ch6.S1.SS1">
        <title><tag>6.1.1 </tag>AVR Studio 5</title>
        <para xml:id="Ch6.S1.SS1.p1">
          <p><emph>AVR Studio 5</emph>[<ref labelref="LABEL:sec:V_Software"/>] ist eine von Atmel bereitgestellte Entwicklungsumgebung. Diese scheint jedoch eine fehlerhafte Bibliothek zu enthalten. Die Kombination aus Mikrocontroller ATmega324A und AVR Studio 5 erzeugte nicht nachvollziehbare Probleme. Bei dem selbem Programm und einem anderem Mikrocontroller oder einer anderen Entwicklungsumgebung tauchten keine Fehler auf.
In der Entwicklungsumgebung <emph>Eclipse</emph>[<ref labelref="LABEL:sec:V_Software"/>] lies sich der Fehler reproduzieren wenn der Pfad der von Atmel bereitgestellten Bibliotheken eingestellt wurde. Eine von <emph>WinAVR</emph> bereitgestellte Bibliothek und eine selbst kompilierte <text backgroundcolor="#D9D9FF">Toolchain</text> unter <emph>Linux</emph> zeigten diese Probleme nicht.<break/>Daher wurde zur <text backgroundcolor="#D9D9FF">Open Source</text> Entwicklungsumgebung Eclipse mit freien Bibliotheken von WinAVR gewechselt. Dadurch wurde das Problem umgangen und das Projekt plattformunabhänig. Bis auf RapidForm2004 wurde somit nur noch freie Open Source Software verwendet.<break/></p>
        </para>
      </subsection>
      <subsection refnum="6.1.2" xml:id="Ch6.S1.SS2">
        <title><tag>6.1.2 </tag>Eclipse</title>
        <para xml:id="Ch6.S1.SS2.p1">
          <p>Eclipse ist eine in Java programmierte freie open source Entwicklungsumgebung für Java. Sie lässt sich durch <text backgroundcolor="#D9D9FF">Plugins</text> leicht für viele Programmiersprachen erweitern.<break/><!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 275 **** -->Mit dem <emph>CDT-Plugin</emph>, dem <emph>AVR-Plugin</emph>, der Bibliothek von <emph>WinAVR</emph> und der Programmiersoftware <emph>AVRDude</emph> ist Eclipse eine vollwertige Entwicklungsumgebung für Mikrocontroller von Atmel.</p>
        </para>
      </subsection>
    </section>
    <section refnum="6.2" xml:id="Ch6.S2" labels="LABEL:sec:Interrupts">
      <title><tag>6.2 </tag>Interrupts</title>
      <para xml:id="Ch6.S2.p1">
        <p>Viele Mikrocontroller bieten die Möglichkeit <emph>eventbasierte</emph> <text backgroundcolor="#D9D9FF">Subroutinen</text> auszuführen. Wenn ein sogenannter <text backgroundcolor="#D9D9FF">Interrupt</text> ausgelöst wird, wird das Hauptprogramm unterbrochen und eine entsprechende <text backgroundcolor="#D9D9FF">Interrupt-Service-Routine</text>, kurz ISR, ausgeführt. Nach Beendigung der ISR wird das Hauptprogramm an der Stelle wieder aufgenommen, an der es unterbrochen wurde. ISR dürfen nur sehr wenige Befehle enthalten und sollten innerhalb weniger <text backgroundcolor="#D9D9FF">Taktzyklen</text> abgeschlossen sein.<break/>Interrupts können z.B. der Überlauf eines internen Timer, oder ein externens Signal an einem Pin sein. Im Projekt werden Externe-Interrupts für die Endschalter, Timer-Überlauf-Interrupts für das Entprellen der Taster und der Watchdog-Interrupt zum erkennen von Fehlern genutzt.</p>
      </para>
      <subsection refnum="6.2.1" xml:id="Ch6.S2.SS1" labels="LABEL:sec:Endschalter_SW">
        <title><tag>6.2.1 </tag>Endschalter</title>
        <para xml:id="Ch6.S2.SS1.p1">
          <p>Die Endschalter sind über die Schrittmotorkarten und eine Brücke auf der Rückseite der Einschubsteckplätze mit der Mikrocontrollerplatine verbunden. Dort sind sie an 2 Interrupt Pins angeschlossen. Bei einem Flankenwechsel an den Pins wird ein Interrupt ausgelöst. <break/>Mit den Zeilen 1–2 des Codelistings <ref labelref="LABEL:lst:ISR_ES"/> werden Pin-Change-Interrupts für bestimmte Pins zugelassen. Die Zeilen 3–7 und 8–12 zeigen die Interrupt-Service-Routinen für die beiden Interrupts.</p>
        </para>
        <listing class="language_C" refnum="19" xml:id="LST19" labels="LABEL:lst:ISR_ES">
          <toccaption><tag>19 </tag>ISR: Endschalter</toccaption>
          <caption><tag>Listing 19: </tag>ISR: Endschalter</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">PCMSK3<text class="lstspace">   </text>|=<text class="lstspace"> </text>(<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>PCINT28<text class="lstspace"> </text>);<text class="lstspace">  </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Interrupts<text class="lstspace"> </text>definierenPD4<text class="lstspace"> </text>als<text class="lstspace"> </text>Interrupt<text class="lstspace"> </text>zulassen</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">PCICR<text class="lstspace">    </text>|=<text class="lstspace"> </text>(<text class="lstspace"> </text>1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>PCIE3<text class="lstspace">   </text>);<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">Pin<text class="lstspace"> </text>Change<text class="lstspace"> </text>Interrupt<text class="lstspace"> </text>ControlR<text class="lstspace"> </text>PCIE3<text class="lstspace"> </text>setzen<text class="lstspace"> </text>fuer<text class="lstspace"> </text>PCINT30</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">ISR(PCINT3_vect){<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">+<text class="lstspace"> </text>Endschalter<text class="lstspace"> </text>Position<text class="lstspace"> </text>erreicht</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>lcd_clrscr();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>lcd_puts(”<text color="#000000">Obere\nEndposition\nErreicht!</text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>LED_PORT<text class="lstspace"> </text>^=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED3);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">ISR(PCINT2_vect){<text class="lstspace">   </text>//<text class="lstspace" color="#008000"> </text><text color="#008000">-<text class="lstspace"> </text>Endschalter<text class="lstspace"> </text>Position<text class="lstspace"> </text>erreicht</text></text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>lcd_clrscr();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>lcd_puts(”<text color="#000000">Untere\nEndposition\nErreicht!</text>”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">  </text>LED_PORT<text class="lstspace"> </text>^=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED3);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
      </subsection>
      <subsection refnum="6.2.2" xml:id="Ch6.S2.SS2">
        <title><tag>6.2.2 </tag>Watchdog</title>
        <para xml:id="Ch6.S2.SS2.p1">
          <p>Der <text backgroundcolor="#D9D9FF">Watchdog</text> ist eine Sicherungseinrichtung des Mikrocontroller. In regelmäßigen Abständen wird überprüft ob das Watchdog-Bit gesetzt ist und anschließend zurück gesetzt. Das Bit muss innerhalb der voreingestellten Zeit immer wieder neu gesetzt werden. Dies kann mit der Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">wdt_reset()</text> realisiert werden. Ist das Bit nicht gesetzt, wird der Mikrocontroller zurückgesetzt. Dies geschieht z.B. bei ungewollten Endlosschleifen.<break/>Mit den Zeilen 3–10 des Codelisting <ref labelref="LABEL:lst:Watchdog"/> wird der Watchdog initialisiert und festgelegt in welchen Zeitintervallen das Watchdog-Bit überprüft werden soll. Der Ablauf zum einstellen des Zeitinveralls muss genau wie im Datenblatt des Mikrocontroller beschrieben eingehalten werden. Dies verhindert ein versehentliches Ändern der Einstellung.
Ist das Fusebit <emph>WDTON</emph> gesetzt kann der Watchdog nicht abgeschaltet werden (siehe Kapitel <ref labelref="LABEL:sec:Fuses"/>).<break/>Wahlweise kann kurz vor dem zurücksetzen des Mikrocontroller noch die Watchdog-ISR durchlaufen werden. Im Projekt wird in der ISR die <emph>Fehler-LED</emph> eingeschaltet und eine Meldung auf dem LC-Display ausgegeben (siehe Codelisting <ref labelref="LABEL:lst:Watchdog"/> Zeilen 12-16).</p>
        </para>
        <listing class="language_C" refnum="20" xml:id="LST20" labels="LABEL:lst:Watchdog">
          <toccaption><tag>20 </tag>Watchdog</toccaption>
          <caption><tag>Listing 20: </tag>Watchdog</caption>
          <tabular>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">1</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">include<text class="lstspace"> </text>&lt;avr/wdt.h&gt;</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">2</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace"> </text>Initialisierung<text class="lstspace"> </text>des<text class="lstspace"> </text>Watchdog</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">3</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">void<text class="lstspace"> </text>init_WDT(void)<text class="lstspace"> </text>{</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">4</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>cli();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">5</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>wdt_reset();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">6</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>WDTCSR<text class="lstspace"> </text>|=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>WDCE)<text class="lstspace"> </text>|<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>WDE);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">7</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>WDTCSR<text class="lstspace"> </text>=<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>WDE)<text class="lstspace"> </text>|<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>WDIE)<text class="lstspace"> </text>|<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>WDP3)<text class="lstspace"> </text>|<text class="lstspace"> </text>(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>WDP0);<text class="lstspace"> </text>//Watchdog<text class="lstspace"> </text>8s</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">8</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>//WDTCSR<text class="lstspace"> </text>=<text class="lstspace"> </text>0x0F;<text class="lstspace"> </text>//Watchdog<text class="lstspace"> </text>Off</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">9</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">    </text>sei();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">10</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">11</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">//<text class="lstspace"> </text>Watchdog<text class="lstspace"> </text>ISR</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">12</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">ISR(WDT_vect){</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">13</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>LED_PORT<text class="lstspace"> </text>&amp;=~(1<text class="lstspace"> </text>&lt;&lt;<text class="lstspace"> </text>LED4);//<text class="lstspace"> </text>LED5<text class="lstspace"> </text>einschalten</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">14</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_clrscr();</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">15</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote"><text class="lstspace">        </text>lcd_puts(”Something<text class="lstspace"> </text>went<text class="lstspace"> </text>\nterribly<text class="lstspace"> </text>wrong!\nRebooting!”);</text>
              </td>
            </tr>
            <tr>
              <td class="linenumber">
                <text fontsize="tiny">16</text>
              </td>
              <td>
                <text class="lstline" fontsize="footnote">}</text>
              </td>
            </tr>
          </tabular>
        </listing>
      </subsection>
    </section>
    <section refnum="6.3" xml:id="Ch6.S3" labels="LABEL:sec:Fuses">
      <title><tag>6.3 </tag>Fuses</title>
      <para xml:id="Ch6.S3.p1">
        <p>Als <text backgroundcolor="#D9D9FF">Fuses</text> werden Register bezeichnet mit denen sich, auf Hardwareebene, das Verhalten des Mikrocontrollers verändern lässt. Im Projekt wurden folgende Fuses problematisch.</p>
        <itemize xml:id="Ch6.I1">
          <item xml:id="Ch6.I1.i1">
            <para xml:id="Ch6.I1.i1.p1">
              <p><text font="bold">JTAGEN</text> - Ist dieses Bit gesetzt, kann an 4 Pins des <emph>PortB</emph> ein <text backgroundcolor="#D9D9FF">JTAG-Debugger</text> angeschlossen werden. Debuggen auf Hardwareebene bietet viele Vorteile. Diese wurden im Projekt jedoch nicht genutzt, da kein JTAG-Debugger zur Verfügung stand und PortB für die LEDs genutzt wurde.
<!-- %**** Inhalt/Kapitel_AufbauderArbeit.tex Line 300 **** --></p>
            </para>
          </item>
          <item xml:id="Ch6.I1.i2">
            <para xml:id="Ch6.I1.i2.p1">
              <p><text font="bold">WDTON</text> - Ist dieses Bit gesetzt, läuft der Watchdog-Timer immer mit. Wird der Watchdog dann nicht regelmäßig mit der Funktion <text backgroundcolor="#FFFFE6" color="#0000FF" font="typewriter">wdt_reset()</text> zurückgesetzt, startet der Mikrocontroller ständig neu.</p>
            </para>
          </item>
          <item xml:id="Ch6.I1.i3">
            <para xml:id="Ch6.I1.i3.p1">
              <p><text font="bold">CKDIV8</text> - Teilt den Systemtakt des Mikrocontroller durch 8. Dies ist Energiesparender. Der geringere Takt muss in F_CPU angepasst werden da sonst zeitkritische Prozesse mit der falschen Geschwindigkeit ablaufen. Das Bit wurde jedoch im Projekt nicht gesetzt.</p>
            </para>
          </item>
          <item xml:id="Ch6.I1.i4">
            <para xml:id="Ch6.I1.i4.p1">
              <p><text font="bold">CKOUT</text> - An einem Pin an <emph>PortB</emph> wird der Systemtakt ausgegeben. Dieser kann dann leicht mit einem Frequenz-Messgerät überprüft werden. Der Pin kann dann jedoch nicht anderweitig genutzt werden.</p>
            </para>
          </item>
          <item xml:id="Ch6.I1.i5">
            <para xml:id="Ch6.I1.i5.p1">
              <p><text font="bold">CKSELX</text> - Über diese 4 Bits kann der Systemtakt eingestellt werden.</p>
            </para>
          </item>
        </itemize>
      </para>
      <table frefnum="Table 6.1" refnum="6.1" xml:id="Ch6.T1a" labels="LABEL:tab:Fuses">
        <caption><tag>Table 6.1: </tag>Fuses</caption>
        <toccaption><tag>6.1 </tag>Fuses</toccaption>
        <tabular>
          <tr>
            <td align="left" border="l r t">OCDEN</td>
            <td align="left" border="r t">On Chip Debugging</td>
          </tr>
          <tr>
            <td align="left" border="l r t">JTAGEN</td>
            <td align="left" border="r t">Hardware Debugging</td>
          </tr>
          <tr>
            <td align="left" border="l r t">SPIEN</td>
            <td align="left" border="r t">Serial Program and Data Downloading</td>
          </tr>
          <tr>
            <td align="left" border="l r t">WDTON</td>
            <td align="left" border="r t">Watchdog Timer always on</td>
          </tr>
          <tr>
            <td align="left" border="l r t">EESAVE</td>
            <td align="left" border="r t">EEPROM memory is preserved through the Chip Erase</td>
          </tr>
          <tr>
            <td align="left" border="l r t">BOOTSZ1</td>
            <td align="left" border="r t">Select Boot Size</td>
          </tr>
          <tr>
            <td align="left" border="l r t">BOOTSZ0</td>
            <td align="left" border="r t">Select Boot Size</td>
          </tr>
          <tr>
            <td align="left" border="l r t">BOOTRST</td>
            <td align="left" border="r t">Select Reset Vector</td>
          </tr>
          <tr>
            <td align="left" border="l r t">CKDIV8</td>
            <td align="left" border="r t">Divide clock by 8</td>
          </tr>
          <tr>
            <td align="left" border="l r t">CKOUT</td>
            <td align="left" border="r t">Clock output</td>
          </tr>
          <tr>
            <td align="left" border="l r t">SUT1</td>
            <td align="left" border="r t">Select start-up time</td>
          </tr>
          <tr>
            <td align="left" border="l r t">SUT0</td>
            <td align="left" border="r t">Select start-up time</td>
          </tr>
          <tr>
            <td align="left" border="l r t">CKSEL3</td>
            <td align="left" border="r t">Select Clock source</td>
          </tr>
          <tr>
            <td align="left" border="l r t">CKSEL2</td>
            <td align="left" border="r t">Select Clock source</td>
          </tr>
          <tr>
            <td align="left" border="l r t">CKSEL1</td>
            <td align="left" border="r t">Select Clock source</td>
          </tr>
          <tr>
            <td align="left" border="b l r t">CKSEL0</td>
            <td align="left" border="b r t">Select Clock source</td>
          </tr>
        </tabular>
      </table>
      <!-- %Aufbau -->
    </section>
  </chapter>
  <chapter frefnum="Chapter 7" refnum="7" xml:id="Ch7" labels="LABEL:cha:Fazit">
    <title><tag>Chapter 7 </tag>Fazit und weitere Möglichkeiten</title>
    <toctitle><tag>7 </tag>Fazit und weitere Möglichkeiten</toctitle>
    <section refnum="7.1" xml:id="Ch7.S1">
      <title><tag>7.1 </tag>Fazit</title>
      <para xml:id="Ch7.S1.p1">
        <p>Das vorgegeben Ziel den Aufbau in Betrieb zu nehmen und mit einem Mikrocontroller so zu erweitern, dass die Erfassungssoftware RapidForm2004 kompatibel mit dem vorhandenen Drehtisch ist, wurde erreicht. Die Software kann vollständig genutzt werden und alle wesentlichen Funktionen der Schrittmotorsteuerungen werden von der Mikrocontroller Programmierung unterstützt. Im Anhang <ref labelref="LABEL:sec:StepbyStep"/> befindet sich eine Schritt-für-Schritt Anleitung mit der auch Laien das System nutzen können.</p>
      </para>
    </section>
    <section refnum="7.2" xml:id="Ch7.S2">
      <title><tag>7.2 </tag>Bekannte Probleme</title>
      <para xml:id="Ch7.S2.p1">
        <p>Bei einem abschließenden Test funktionierte das Anzeigen einer Meldung beim erreichen der Endschalter, auf dem Display nicht. Alle Verbindungen sind vorhanden und die Programmierung des Mikrocontrollers vollständig. Das Problem ist nicht bekannt und das Auffinden würde weitere Zeit in Anspruch nehmen.<break/>Das Display zeigt während der Rotation <emph>0</emph> anstatt dem Winkel an, um den rotiert wird. Für die Anzahl der Schritte funktionierte diese Anzeige. Vermutlich liegt hier ein Fehler in der Berechnung des Winkels vor.</p>
      </para>
    </section>
    <section refnum="7.3" xml:id="Ch7.S3">
      <title><tag>7.3 </tag>Weitere Möglichkeiten</title>
      <para xml:id="Ch7.S3.p1">
        <p>Eine elegantere Lösung als die Befehle der Befehlssätze in einem Array zu speichern wäre es diese in verketteten Pointer Structs zu speichern. Diese Idee kam leider erst gegen Ende des Projektes und konnte daher aus Zeitmangel nicht mehr umgesetzt werden.<break/>Im Menü lassen sich zur Zeit nur voreingestellte Winkel bzw. Schrittzahlen auswählen. Hier könnte noch eine Funktion geschrieben werden die es dem Benutzer erlaubt Winkel frei einzustellen.
    <!-- %Fazit und Zukunft --></p>
      </para>
      <!-- %Literaturverzeichnis __ 
     %Das Literaturverzeichnis wird aus der Datenbank Bibliographie.bib
     %erstellt. Die genaue Verwendung von bibtex wird hier jedoch nicht erklärt.
     %Link: http://de.wikipedia.org/wiki/BibTeX
     %__-->
    </section>
  </chapter>
  <bibliography files="Bibliographie" xml:id="bib">
    <title>Bibliography</title>
  </bibliography>
  <!-- %Aufruf: bibtex FHWTVorlage 
     %\bibliographystyle{natdin}			% DIN-Stil des
     %DIN-Stil des Literaturverzeichnisses
     %\include{Inhalt/Erklaerung}			% Selbständigkeitserklärung
     %Anhang __
     %Die Inhalte des Anhangs werden analog zu den Kapiteln inkludiert.
     %Dies geschieht in der Datei Anhang.tex
     %__
     %**** Praxisbericht.tex Line 125 ****
     %\clearpage
     %\pagenumbering{roman}
     %\input{Inhalt/Anhang}
     %Index __
     %Zum Erstellen eines Index, die folgende Zeile auskommentieren.
     %__-->
  <index xml:id="idx">
    <title>Index</title>
  </index>
  <!-- %Index hier einfügen -->
</document>
